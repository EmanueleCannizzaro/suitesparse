
##aux_source_directory(. SRC_LIST)
SET(SRC_LIST CACHE STRING *.c FORCE)
list(REMOVE_ITEM SRC_LIST umf4_f77.c)
list(REMOVE_ITEM SRC_LIST umf4_z_f77.c)
list(REMOVE_ITEM SRC_LIST umfpack_xx_demo.c)

include_directories(. "${PROJECT_SOURCE_DIR}/src/umfpack")
include_directories(. "${PROJECT_SOURCE_DIR}/src/amd")
include_directories(. "${PROJECT_SOURCE_DIR}/src/cholmod")

foreach(test ${SRC_LIST} )
    string( REPLACE ".c" "" executable ${test} )
    if("${test}" MATCHES "umfpack_di_*")
      add_executable( ${executable} ${test} )
      target_link_libraries( ${executable} UMFPACK_DI CHOLMOD AMD)
    elseif("${test}" MATCHES "umfpack_dl_*")
      add_executable( ${executable} ${test} )
      target_link_libraries( ${executable} UMFPACK_DL CHOLMOD_L AMD_L)
    elseif("${test}" MATCHES "umfpack_zi_*")
      add_executable( ${executable} ${test} )
      target_link_libraries( ${executable} UMFPACK_ZI CHOLMOD AMD)
    elseif("${test}" MATCHES "umfpack_zl_*")
      add_executable( ${executable} ${test} )
      target_link_libraries( ${executable} UMFPACK_ZL CHOLMOD_L AMD_L)
    else()
      add_executable( ${executable} ${test} )
      target_link_libraries( ${executable} UMFPACK_ZL UMFPACK_ZI UMFPACK_DL UMFPACK_DI CHOLMOD_L CHOLMOD AMD_L AMD)
    endif("${test}" MATCHES "umfpack_di_*")
endforeach (test)
