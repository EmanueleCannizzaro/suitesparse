<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><head><title>cmake/FindSuiteSparse.cmake - ceres-solver - Git at Google</title><link rel="stylesheet" type="text/css" href="//www.google.com/css/go.css" /><link rel="stylesheet" type="text/css" href="/+static/prettify/prettify.vf-M93Ay4IiiWRQSJKPGWQ.cache.css" /><link rel="stylesheet" type="text/css" href="/+static/gitiles.NflJW88ZoV70lY6sErU9Rw.cache.css" /></head><body><h1><img src="//www.google.com/images/logo_sm.gif" alt="Google" />Git</h1><div class="menu"> <a href="https://www.google.com/a/SelectSession?service=gerritcodereview&amp;continue=https://ceres-solver.googlesource.com/login/ceres-solver/%2B/b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c/cmake/FindSuiteSparse.cmake">Sign in</a> </div><div class="breadcrumbs"><a href="/?format=HTML">ceres-solver</a> / <a href="/ceres-solver/">ceres-solver</a> / <a href="/ceres-solver/+/b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c">b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c</a> / <a href="/ceres-solver/+/b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c/">.</a> / <a href="/ceres-solver/+/b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c/cmake">cmake</a> / FindSuiteSparse.cmake</div><div class="sha1">blob: 20c31615525130d14e73bee20f88f10376d6f765 [<a href="/ceres-solver/+/b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c/cmake/FindSuiteSparse.cmake">file</a>] [<a href="/ceres-solver/+log/b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c/cmake/FindSuiteSparse.cmake">log</a>] [<a href="/ceres-solver/+blame/b0a8731fcdde31e6c37a54e8c1e1c00f853c0d5c/cmake/FindSuiteSparse.cmake">blame</a>]</div><ol class="prettyprint"><li><a name="1"></a><span class="com"># Ceres Solver - A fast non-linear least squares minimizer</span></li><li><a name="2"></a><span class="com"># Copyright 2013 Google Inc. All rights reserved.</span></li><li><a name="3"></a><span class="com"># http://code.google.com/p/ceres-solver/</span></li><li><a name="4"></a><span class="com">#</span></li><li><a name="5"></a><span class="com"># Redistribution and use in source and binary forms, with or without</span></li><li><a name="6"></a><span class="com"># modification, are permitted provided that the following conditions are met:</span></li><li><a name="7"></a><span class="com">#</span></li><li><a name="8"></a><span class="com"># * Redistributions of source code must retain the above copyright notice,</span></li><li><a name="9"></a><span class="com">#   this list of conditions and the following disclaimer.</span></li><li><a name="10"></a><span class="com"># * Redistributions in binary form must reproduce the above copyright notice,</span></li><li><a name="11"></a><span class="com">#   this list of conditions and the following disclaimer in the documentation</span></li><li><a name="12"></a><span class="com">#   and/or other materials provided with the distribution.</span></li><li><a name="13"></a><span class="com"># * Neither the name of Google Inc. nor the names of its contributors may be</span></li><li><a name="14"></a><span class="com">#   used to endorse or promote products derived from this software without</span></li><li><a name="15"></a><span class="com">#   specific prior written permission.</span></li><li><a name="16"></a><span class="com">#</span></li><li><a name="17"></a><span class="com"># THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;</span></li><li><a name="18"></a><span class="com"># AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span></li><li><a name="19"></a><span class="com"># IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span></li><li><a name="20"></a><span class="com"># ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE</span></li><li><a name="21"></a><span class="com"># LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</span></li><li><a name="22"></a><span class="com"># CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</span></li><li><a name="23"></a><span class="com"># SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</span></li><li><a name="24"></a><span class="com"># INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</span></li><li><a name="25"></a><span class="com"># CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</span></li><li><a name="26"></a><span class="com"># ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span></li><li><a name="27"></a><span class="com"># POSSIBILITY OF SUCH DAMAGE.</span></li><li><a name="28"></a><span class="com">#</span></li><li><a name="29"></a><span class="com"># Author: alexs.mac@gmail.com (Alex Stewart)</span></li><li><a name="30"></a><span class="com">#</span></li><li><a name="31"></a></li><li><a name="32"></a><span class="com"># FindSuiteSparse.cmake - Find SuiteSparse libraries &amp; dependencies.</span></li><li><a name="33"></a><span class="com">#</span></li><li><a name="34"></a><span class="com"># This module defines the following variables:</span></li><li><a name="35"></a><span class="com">#</span></li><li><a name="36"></a><span class="com"># SUITESPARSE_FOUND: TRUE iff SuiteSparse and all dependencies have been found.</span></li><li><a name="37"></a><span class="com"># SUITESPARSE_INCLUDE_DIRS: Include directories for all SuiteSparse components.</span></li><li><a name="38"></a><span class="com"># SUITESPARSE_LIBRARIES: Libraries for all SuiteSparse component libraries and</span></li><li><a name="39"></a><span class="com">#                        dependencies.</span></li><li><a name="40"></a><span class="com"># SUITESPARSE_VERSION: Extracted from UFconfig.h (&lt;= v3) or</span></li><li><a name="41"></a><span class="com">#                      SuiteSparse_config.h (&gt;= v4).</span></li><li><a name="42"></a><span class="com"># SUITESPARSE_MAIN_VERSION: Equal to 4 if SUITESPARSE_VERSION = 4.2.1</span></li><li><a name="43"></a><span class="com"># SUITESPARSE_SUB_VERSION: Equal to 2 if SUITESPARSE_VERSION = 4.2.1</span></li><li><a name="44"></a><span class="com"># SUITESPARSE_SUBSUB_VERSION: Equal to 1 if SUITESPARSE_VERSION = 4.2.1</span></li><li><a name="45"></a><span class="com">#</span></li><li><a name="46"></a><span class="com"># SUITESPARSE_IS_BROKEN_SHARED_LINKING_UBUNTU_SYSTEM_VERSION: TRUE iff running</span></li><li><a name="47"></a><span class="com">#     on Ubuntu, SUITESPARSE_VERSION is 3.4.0 and found SuiteSparse is a system</span></li><li><a name="48"></a><span class="com">#     install, in which case found version of SuiteSparse cannot be used to link</span></li><li><a name="49"></a><span class="com">#     a shared library due to a bug (static linking is unaffected).</span></li><li><a name="50"></a><span class="com">#</span></li><li><a name="51"></a><span class="com"># The following variables control the behaviour of this module:</span></li><li><a name="52"></a><span class="com">#</span></li><li><a name="53"></a><span class="com"># SUITESPARSE_INCLUDE_DIR_HINTS: List of additional directories in which to</span></li><li><a name="54"></a><span class="com">#                                search for SuiteSparse includes,</span></li><li><a name="55"></a><span class="com">#                                e.g: /timbuktu/include.</span></li><li><a name="56"></a><span class="com"># SUITESPARSE_LIBRARY_DIR_HINTS: List of additional directories in which to</span></li><li><a name="57"></a><span class="com">#                                search for SuiteSparse libraries,</span></li><li><a name="58"></a><span class="com">#                                e.g: /timbuktu/lib.</span></li><li><a name="59"></a><span class="com">#</span></li><li><a name="60"></a><span class="com"># The following variables define the presence / includes &amp; libraries for the</span></li><li><a name="61"></a><span class="com"># SuiteSparse components searched for, the SUITESPARSE_XX variables are the</span></li><li><a name="62"></a><span class="com"># union of the variables for all components.</span></li><li><a name="63"></a><span class="com">#</span></li><li><a name="64"></a><span class="com"># == Symmetric Approximate Minimum Degree (AMD)</span></li><li><a name="65"></a><span class="com"># AMD_FOUND</span></li><li><a name="66"></a><span class="com"># AMD_INCLUDE_DIR</span></li><li><a name="67"></a><span class="com"># AMD_LIBRARY</span></li><li><a name="68"></a><span class="com">#</span></li><li><a name="69"></a><span class="com"># == Constrained Approximate Minimum Degree (CAMD)</span></li><li><a name="70"></a><span class="com"># CAMD_FOUND</span></li><li><a name="71"></a><span class="com"># CAMD_INCLUDE_DIR</span></li><li><a name="72"></a><span class="com"># CAMD_LIBRARY</span></li><li><a name="73"></a><span class="com">#</span></li><li><a name="74"></a><span class="com"># == Column Approximate Minimum Degree (COLAMD)</span></li><li><a name="75"></a><span class="com"># COLAMD_FOUND</span></li><li><a name="76"></a><span class="com"># COLAMD_INCLUDE_DIR</span></li><li><a name="77"></a><span class="com"># COLAMD_LIBRARY</span></li><li><a name="78"></a><span class="com">#</span></li><li><a name="79"></a><span class="com"># Constrained Column Approximate Minimum Degree (CCOLAMD)</span></li><li><a name="80"></a><span class="com"># CCOLAMD_FOUND</span></li><li><a name="81"></a><span class="com"># CCOLAMD_INCLUDE_DIR</span></li><li><a name="82"></a><span class="com"># CCOLAMD_LIBRARY</span></li><li><a name="83"></a><span class="com">#</span></li><li><a name="84"></a><span class="com"># == Sparse Supernodal Cholesky Factorization and Update/Downdate (CHOLMOD)</span></li><li><a name="85"></a><span class="com"># CHOLMOD_FOUND</span></li><li><a name="86"></a><span class="com"># CHOLMOD_INCLUDE_DIR</span></li><li><a name="87"></a><span class="com"># CHOLMOD_LIBRARY</span></li><li><a name="88"></a><span class="com">#</span></li><li><a name="89"></a><span class="com"># == Multifrontal Sparse QR (SuiteSparseQR)</span></li><li><a name="90"></a><span class="com"># SUITESPARSEQR_FOUND</span></li><li><a name="91"></a><span class="com"># SUITESPARSEQR_INCLUDE_DIR</span></li><li><a name="92"></a><span class="com"># SUITESPARSEQR_LIBRARY</span></li><li><a name="93"></a><span class="com">#</span></li><li><a name="94"></a><span class="com"># == Common configuration for all but CSparse (SuiteSparse version &gt;= 4).</span></li><li><a name="95"></a><span class="com"># SUITESPARSE_CONFIG_FOUND</span></li><li><a name="96"></a><span class="com"># SUITESPARSE_CONFIG_INCLUDE_DIR</span></li><li><a name="97"></a><span class="com"># SUITESPARSE_CONFIG_LIBRARY</span></li><li><a name="98"></a><span class="com">#</span></li><li><a name="99"></a><span class="com"># == Common configuration for all but CSparse (SuiteSparse version &lt; 4).</span></li><li><a name="100"></a><span class="com"># UFCONFIG_FOUND</span></li><li><a name="101"></a><span class="com"># UFCONFIG_INCLUDE_DIR</span></li><li><a name="102"></a><span class="com">#</span></li><li><a name="103"></a><span class="com"># Optional SuiteSparse Dependencies:</span></li><li><a name="104"></a><span class="com">#</span></li><li><a name="105"></a><span class="com"># == Serial Graph Partitioning and Fill-reducing Matrix Ordering (METIS)</span></li><li><a name="106"></a><span class="com"># METIS_FOUND</span></li><li><a name="107"></a><span class="com"># METIS_LIBRARY</span></li><li><a name="108"></a><span class="com">#</span></li><li><a name="109"></a><span class="com"># == Intel Thread Building Blocks (TBB)</span></li><li><a name="110"></a><span class="com"># TBB_FOUND</span></li><li><a name="111"></a><span class="com"># TBB_LIBRARIES</span></li><li><a name="112"></a></li><li><a name="113"></a><span class="com"># Called if we failed to find SuiteSparse or any of it&#39;s required dependencies,</span></li><li><a name="114"></a><span class="com"># unsets all public (designed to be used externally) variables and reports</span></li><li><a name="115"></a><span class="com"># error message at priority depending upon [REQUIRED/QUIET/&lt;NONE&gt;] argument.</span></li><li><a name="116"></a><span class="pln">MACRO</span><span class="pun">(</span><span class="pln">SUITESPARSE_REPORT_NOT_FOUND REASON_MSG</span><span class="pun">)</span></li><li><a name="117"></a><span class="pln">  UNSET</span><span class="pun">(</span><span class="pln">SUITESPARSE_FOUND</span><span class="pun">)</span></li><li><a name="118"></a><span class="pln">  UNSET</span><span class="pun">(</span><span class="pln">SUITESPARSE_INCLUDE_DIRS</span><span class="pun">)</span></li><li><a name="119"></a><span class="pln">  UNSET</span><span class="pun">(</span><span class="pln">SUITESPARSE_LIBRARIES</span><span class="pun">)</span></li><li><a name="120"></a><span class="pln">  UNSET</span><span class="pun">(</span><span class="pln">SUITESPARSE_VERSION</span><span class="pun">)</span></li><li><a name="121"></a><span class="pln">  UNSET</span><span class="pun">(</span><span class="pln">SUITESPARSE_MAIN_VERSION</span><span class="pun">)</span></li><li><a name="122"></a><span class="pln">  UNSET</span><span class="pun">(</span><span class="pln">SUITESPARSE_SUB_VERSION</span><span class="pun">)</span></li><li><a name="123"></a><span class="pln">  UNSET</span><span class="pun">(</span><span class="pln">SUITESPARSE_SUBSUB_VERSION</span><span class="pun">)</span></li><li><a name="124"></a><span class="pln">  </span><span class="com"># Note &lt;package&gt;_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()</span></li><li><a name="125"></a><span class="pln">  </span><span class="com"># use the camelcase library name, not uppercase.</span></li><li><a name="126"></a><span class="pln">  IF </span><span class="pun">(</span><span class="typ">SuiteSparse_FIND_QUIETLY</span><span class="pun">)</span></li><li><a name="127"></a><span class="pln">    MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Failed to find SuiteSparse - &quot;</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">REASON_MSG</span><span class="pun">}</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">ARGN</span><span class="pun">})</span></li><li><a name="128"></a><span class="pln">  ELSEIF </span><span class="pun">(</span><span class="typ">SuiteSparse_FIND_REQUIRED</span><span class="pun">)</span></li><li><a name="129"></a><span class="pln">    MESSAGE</span><span class="pun">(</span><span class="pln">FATAL_ERROR </span><span class="str">&quot;Failed to find SuiteSparse - &quot;</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">REASON_MSG</span><span class="pun">}</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">ARGN</span><span class="pun">})</span></li><li><a name="130"></a><span class="pln">  ELSE</span><span class="pun">()</span></li><li><a name="131"></a><span class="pln">    </span><span class="com"># Neither QUIETLY nor REQUIRED, use WARNING which emits a message</span></li><li><a name="132"></a><span class="pln">    </span><span class="com"># but continues configuration and allows generation.</span></li><li><a name="133"></a><span class="pln">    MESSAGE</span><span class="pun">(</span><span class="pln">WARNING </span><span class="str">&quot;Failed to find SuiteSparse - &quot;</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">REASON_MSG</span><span class="pun">}</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">ARGN</span><span class="pun">})</span></li><li><a name="134"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="typ">SuiteSparse_FIND_QUIETLY</span><span class="pun">)</span></li><li><a name="135"></a><span class="pln">ENDMACRO</span><span class="pun">(</span><span class="pln">SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">)</span></li><li><a name="136"></a></li><li><a name="137"></a><span class="com"># Specify search directories for include files and libraries (this is the union</span></li><li><a name="138"></a><span class="com"># of the search directories for all OSs).  Search user-specified hint</span></li><li><a name="139"></a><span class="com"># directories first if supplied, and search user-installed locations first</span></li><li><a name="140"></a><span class="com"># so that we prefer user installs to system installs where both exist.</span></li><li><a name="141"></a><span class="pln">LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_CHECK_INCLUDE_DIRS</span></li><li><a name="142"></a><span class="pln">  $</span><span class="pun">{</span><span class="pln">SUITESPARSE_INCLUDE_DIR_HINTS</span><span class="pun">}</span></li><li><a name="143"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">opt</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">include</span></li><li><a name="144"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">opt</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">include</span><span class="pun">/</span><span class="pln">ufsparse </span><span class="com"># Mac OS X</span></li><li><a name="145"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">homebrew</span><span class="pun">/</span><span class="pln">include </span><span class="com"># Mac OS X</span></li><li><a name="146"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">include</span></li><li><a name="147"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">include</span><span class="pun">/</span><span class="pln">suitesparse</span></li><li><a name="148"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="pln">include</span><span class="pun">/</span><span class="pln">suitesparse </span><span class="com"># Ubuntu</span></li><li><a name="149"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="pln">include</span><span class="pun">)</span></li><li><a name="150"></a><span class="pln">LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_CHECK_LIBRARY_DIRS</span></li><li><a name="151"></a><span class="pln">  $</span><span class="pun">{</span><span class="pln">SUITESPARSE_LIBRARY_DIR_HINTS</span><span class="pun">}</span></li><li><a name="152"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">opt</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">lib</span></li><li><a name="153"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">opt</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">lib</span><span class="pun">/</span><span class="pln">ufsparse </span><span class="com"># Mac OS X</span></li><li><a name="154"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">homebrew</span><span class="pun">/</span><span class="pln">lib </span><span class="com"># Mac OS X</span></li><li><a name="155"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">lib</span></li><li><a name="156"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="kwd">local</span><span class="pun">/</span><span class="pln">lib</span><span class="pun">/</span><span class="pln">suitesparse</span></li><li><a name="157"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="pln">lib</span><span class="pun">/</span><span class="pln">suitesparse </span><span class="com"># Ubuntu</span></li><li><a name="158"></a><span class="pln">  </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="pln">lib</span><span class="pun">)</span></li><li><a name="159"></a></li><li><a name="160"></a><span class="com"># BLAS.</span></li><li><a name="161"></a><span class="pln">FIND_PACKAGE</span><span class="pun">(</span><span class="pln">BLAS QUIET</span><span class="pun">)</span></li><li><a name="162"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">NOT BLAS_FOUND</span><span class="pun">)</span></li><li><a name="163"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span></li><li><a name="164"></a><span class="pln">    </span><span class="str">&quot;Did not find BLAS library (required for SuiteSparse).&quot;</span><span class="pun">)</span></li><li><a name="165"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">NOT BLAS_FOUND</span><span class="pun">)</span></li><li><a name="166"></a></li><li><a name="167"></a><span class="com"># LAPACK.</span></li><li><a name="168"></a><span class="pln">FIND_PACKAGE</span><span class="pun">(</span><span class="pln">LAPACK QUIET</span><span class="pun">)</span></li><li><a name="169"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">NOT LAPACK_FOUND</span><span class="pun">)</span></li><li><a name="170"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span></li><li><a name="171"></a><span class="pln">    </span><span class="str">&quot;Did not find LAPACK library (required for SuiteSparse).&quot;</span><span class="pun">)</span></li><li><a name="172"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">NOT LAPACK_FOUND</span><span class="pun">)</span></li><li><a name="173"></a></li><li><a name="174"></a><span class="com"># AMD.</span></li><li><a name="175"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">AMD_FOUND TRUE</span><span class="pun">)</span></li><li><a name="176"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">AMD_LIBRARY NAMES amd</span></li><li><a name="177"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="178"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">AMD_LIBRARY</span><span class="pun">})</span></li><li><a name="179"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found AMD library: ${AMD_LIBRARY}&quot;</span><span class="pun">)</span></li><li><a name="180"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">AMD_LIBRARY</span><span class="pun">})</span></li><li><a name="181"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find AMD library.&quot;</span><span class="pun">)</span></li><li><a name="182"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">AMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="183"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">AMD_LIBRARY</span><span class="pun">})</span></li><li><a name="184"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">AMD_LIBRARY</span><span class="pun">)</span></li><li><a name="185"></a></li><li><a name="186"></a><span class="pln">FIND_PATH</span><span class="pun">(</span><span class="pln">AMD_INCLUDE_DIR NAMES amd</span><span class="pun">.</span><span class="pln">h</span></li><li><a name="187"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="188"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">AMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="189"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found AMD header in: ${AMD_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="190"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">AMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="191"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find AMD header.&quot;</span><span class="pun">)</span></li><li><a name="192"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">AMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="193"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">AMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="194"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">AMD_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="195"></a></li><li><a name="196"></a><span class="com"># CAMD.</span></li><li><a name="197"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">CAMD_FOUND TRUE</span><span class="pun">)</span></li><li><a name="198"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">CAMD_LIBRARY NAMES camd</span></li><li><a name="199"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="200"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="201"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found CAMD library: ${CAMD_LIBRARY}&quot;</span><span class="pun">)</span></li><li><a name="202"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="203"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find CAMD library.&quot;</span><span class="pun">)</span></li><li><a name="204"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">CAMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="205"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="206"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">CAMD_LIBRARY</span><span class="pun">)</span></li><li><a name="207"></a></li><li><a name="208"></a><span class="pln">FIND_PATH</span><span class="pun">(</span><span class="pln">CAMD_INCLUDE_DIR NAMES camd</span><span class="pun">.</span><span class="pln">h</span></li><li><a name="209"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="210"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="211"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found CAMD header in: ${CAMD_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="212"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="213"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find CAMD header.&quot;</span><span class="pun">)</span></li><li><a name="214"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">CAMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="215"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="216"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">CAMD_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="217"></a></li><li><a name="218"></a><span class="com"># COLAMD.</span></li><li><a name="219"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">COLAMD_FOUND TRUE</span><span class="pun">)</span></li><li><a name="220"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">COLAMD_LIBRARY NAMES colamd</span></li><li><a name="221"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="222"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">COLAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="223"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found COLAMD library: ${COLAMD_LIBRARY}&quot;</span><span class="pun">)</span></li><li><a name="224"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">COLAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="225"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find COLAMD library.&quot;</span><span class="pun">)</span></li><li><a name="226"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">COLAMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="227"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">COLAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="228"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">COLAMD_LIBRARY</span><span class="pun">)</span></li><li><a name="229"></a></li><li><a name="230"></a><span class="pln">FIND_PATH</span><span class="pun">(</span><span class="pln">COLAMD_INCLUDE_DIR NAMES colamd</span><span class="pun">.</span><span class="pln">h</span></li><li><a name="231"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="232"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">COLAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="233"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found COLAMD header in: ${COLAMD_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="234"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">COLAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="235"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find COLAMD header.&quot;</span><span class="pun">)</span></li><li><a name="236"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">COLAMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="237"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">COLAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="238"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">COLAMD_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="239"></a></li><li><a name="240"></a><span class="com"># CCOLAMD.</span></li><li><a name="241"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">CCOLAMD_FOUND TRUE</span><span class="pun">)</span></li><li><a name="242"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">CCOLAMD_LIBRARY NAMES ccolamd</span></li><li><a name="243"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="244"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CCOLAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="245"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found CCOLAMD library: ${CCOLAMD_LIBRARY}&quot;</span><span class="pun">)</span></li><li><a name="246"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CCOLAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="247"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find CCOLAMD library.&quot;</span><span class="pun">)</span></li><li><a name="248"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">CCOLAMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="249"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CCOLAMD_LIBRARY</span><span class="pun">})</span></li><li><a name="250"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">CCOLAMD_LIBRARY</span><span class="pun">)</span></li><li><a name="251"></a></li><li><a name="252"></a><span class="pln">FIND_PATH</span><span class="pun">(</span><span class="pln">CCOLAMD_INCLUDE_DIR NAMES ccolamd</span><span class="pun">.</span><span class="pln">h</span></li><li><a name="253"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="254"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CCOLAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="255"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found CCOLAMD header in: ${CCOLAMD_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="256"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CCOLAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="257"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find CCOLAMD header.&quot;</span><span class="pun">)</span></li><li><a name="258"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">CCOLAMD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="259"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CCOLAMD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="260"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">CCOLAMD_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="261"></a></li><li><a name="262"></a><span class="com"># CHOLMOD.</span></li><li><a name="263"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">CHOLMOD_FOUND TRUE</span><span class="pun">)</span></li><li><a name="264"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">CHOLMOD_LIBRARY NAMES cholmod</span></li><li><a name="265"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="266"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CHOLMOD_LIBRARY</span><span class="pun">})</span></li><li><a name="267"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found CHOLMOD library: ${CHOLMOD_LIBRARY}&quot;</span><span class="pun">)</span></li><li><a name="268"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CHOLMOD_LIBRARY</span><span class="pun">})</span></li><li><a name="269"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find CHOLMOD library.&quot;</span><span class="pun">)</span></li><li><a name="270"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">CHOLMOD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="271"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CHOLMOD_LIBRARY</span><span class="pun">})</span></li><li><a name="272"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">CHOLMOD_LIBRARY</span><span class="pun">)</span></li><li><a name="273"></a></li><li><a name="274"></a><span class="pln">FIND_PATH</span><span class="pun">(</span><span class="pln">CHOLMOD_INCLUDE_DIR NAMES cholmod</span><span class="pun">.</span><span class="pln">h</span></li><li><a name="275"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="276"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CHOLMOD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="277"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found CHOLMOD header in: ${CHOLMOD_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="278"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CHOLMOD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="279"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find CHOLMOD header.&quot;</span><span class="pun">)</span></li><li><a name="280"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">CHOLMOD_FOUND FALSE</span><span class="pun">)</span></li><li><a name="281"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">CHOLMOD_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="282"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">CHOLMOD_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="283"></a></li><li><a name="284"></a><span class="com"># SuiteSparseQR.</span></li><li><a name="285"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_FOUND TRUE</span><span class="pun">)</span></li><li><a name="286"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_LIBRARY NAMES spqr</span></li><li><a name="287"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="288"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_LIBRARY</span><span class="pun">})</span></li><li><a name="289"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found SuiteSparseQR library: ${SUITESPARSEQR_LIBRARY}&quot;</span><span class="pun">)</span></li><li><a name="290"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_LIBRARY</span><span class="pun">})</span></li><li><a name="291"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find SUITESPARSEQR library.&quot;</span><span class="pun">)</span></li><li><a name="292"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_FOUND FALSE</span><span class="pun">)</span></li><li><a name="293"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_LIBRARY</span><span class="pun">})</span></li><li><a name="294"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_LIBRARY</span><span class="pun">)</span></li><li><a name="295"></a></li><li><a name="296"></a><span class="pln">FIND_PATH</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_INCLUDE_DIR NAMES </span><span class="typ">SuiteSparseQR</span><span class="pun">.</span><span class="pln">hpp</span></li><li><a name="297"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="298"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="299"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found SuiteSparseQR header in: ${SUITESPARSEQR_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="300"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="301"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span><span class="str">&quot;Did not find SUITESPARSEQR header.&quot;</span><span class="pun">)</span></li><li><a name="302"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_FOUND FALSE</span><span class="pun">)</span></li><li><a name="303"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="304"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="305"></a></li><li><a name="306"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">SUITESPARSEQR_FOUND</span><span class="pun">)</span></li><li><a name="307"></a><span class="pln">  </span><span class="com"># SuiteSparseQR may be compiled with Intel Threading Building Blocks,</span></li><li><a name="308"></a><span class="pln">  </span><span class="com"># we assume that if TBB is installed, SuiteSparseQR was compiled with</span></li><li><a name="309"></a><span class="pln">  </span><span class="com"># support for it, this will do no harm if it wasn&#39;t.</span></li><li><a name="310"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">TBB_FOUND TRUE</span><span class="pun">)</span></li><li><a name="311"></a><span class="pln">  FIND_LIBRARY</span><span class="pun">(</span><span class="pln">TBB_LIBRARIES NAMES tbb</span></li><li><a name="312"></a><span class="pln">    PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="313"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">TBB_LIBRARIES</span><span class="pun">})</span></li><li><a name="314"></a><span class="pln">    MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found Intel Thread Building Blocks (TBB) library: &quot;</span></li><li><a name="315"></a><span class="pln">      </span><span class="str">&quot;${TBB_LIBRARIES}, assuming SuiteSparseQR was compiled with TBB.&quot;</span><span class="pun">)</span></li><li><a name="316"></a><span class="pln">  ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">TBB_LIBRARIES</span><span class="pun">})</span></li><li><a name="317"></a><span class="pln">    MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Did not find Intel TBB library, assuming SuiteSparseQR was &quot;</span></li><li><a name="318"></a><span class="pln">      </span><span class="str">&quot;not compiled with TBB.&quot;</span><span class="pun">)</span></li><li><a name="319"></a><span class="pln">    SET</span><span class="pun">(</span><span class="pln">TBB_FOUND FALSE</span><span class="pun">)</span></li><li><a name="320"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">TBB_LIBRARIES</span><span class="pun">})</span></li><li><a name="321"></a><span class="pln">  MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">TBB_LIBRARIES</span><span class="pun">)</span></li><li><a name="322"></a></li><li><a name="323"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">TBB_FOUND</span><span class="pun">)</span></li><li><a name="324"></a><span class="pln">    FIND_LIBRARY</span><span class="pun">(</span><span class="pln">TBB_MALLOC_LIB NAMES tbbmalloc</span></li><li><a name="325"></a><span class="pln">      PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="326"></a><span class="pln">    IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">TBB_MALLOC_LIB</span><span class="pun">})</span></li><li><a name="327"></a><span class="pln">      MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found Intel Thread Building Blocks (TBB) Malloc library: &quot;</span></li><li><a name="328"></a><span class="pln">        </span><span class="str">&quot;${TBB_MALLOC_LIB}&quot;</span><span class="pun">)</span></li><li><a name="329"></a><span class="pln">      </span><span class="com"># Append TBB malloc library to TBB libraries list whilst retaining</span></li><li><a name="330"></a><span class="pln">      </span><span class="com"># any CMake generated help string (cache variable).</span></li><li><a name="331"></a><span class="pln">      LIST</span><span class="pun">(</span><span class="pln">APPEND TBB_LIBRARIES $</span><span class="pun">{</span><span class="pln">TBB_MALLOC_LIB</span><span class="pun">})</span></li><li><a name="332"></a><span class="pln">      GET_PROPERTY</span><span class="pun">(</span><span class="pln">HELP_STRING CACHE TBB_LIBRARIES PROPERTY HELPSTRING</span><span class="pun">)</span></li><li><a name="333"></a><span class="pln">      SET</span><span class="pun">(</span><span class="pln">TBB_LIBRARIES </span><span class="str">&quot;${TBB_LIBRARIES}&quot;</span><span class="pln"> CACHE STRING $</span><span class="pun">{</span><span class="pln">HELP_STRING</span><span class="pun">})</span></li><li><a name="334"></a></li><li><a name="335"></a><span class="pln">      </span><span class="com"># Add the TBB libraries to the SuiteSparseQR libraries (the only</span></li><li><a name="336"></a><span class="pln">      </span><span class="com"># libraries to optionally depend on TBB).</span></li><li><a name="337"></a><span class="pln">      LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSEQR_LIBRARY $</span><span class="pun">{</span><span class="pln">TBB_LIBRARIES</span><span class="pun">})</span></li><li><a name="338"></a></li><li><a name="339"></a><span class="pln">    ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">TBB_MALLOC_LIB</span><span class="pun">})</span></li><li><a name="340"></a><span class="pln">      </span><span class="com"># If we cannot find all required TBB components do not include it as</span></li><li><a name="341"></a><span class="pln">      </span><span class="com"># a dependency.</span></li><li><a name="342"></a><span class="pln">      MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Did not find Intel Thread Building Blocks (TBB) Malloc &quot;</span></li><li><a name="343"></a><span class="pln">        </span><span class="str">&quot;Library, discarding TBB as a dependency.&quot;</span><span class="pun">)</span></li><li><a name="344"></a><span class="pln">      SET</span><span class="pun">(</span><span class="pln">TBB_FOUND FALSE</span><span class="pun">)</span></li><li><a name="345"></a><span class="pln">    ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">TBB_MALLOC_LIB</span><span class="pun">})</span></li><li><a name="346"></a><span class="pln">    MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">TBB_MALLOC_LIB</span><span class="pun">)</span></li><li><a name="347"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">TBB_FOUND</span><span class="pun">)</span></li><li><a name="348"></a><span class="pln">ENDIF</span><span class="pun">(</span><span class="pln">SUITESPARSEQR_FOUND</span><span class="pun">)</span></li><li><a name="349"></a></li><li><a name="350"></a><span class="com"># UFconfig / SuiteSparse_config.</span></li><li><a name="351"></a><span class="com">#</span></li><li><a name="352"></a><span class="com"># If SuiteSparse version is &gt;= 4 then SuiteSparse_config is required.</span></li><li><a name="353"></a><span class="com"># For SuiteSparse 3, UFconfig.h is required.</span></li><li><a name="354"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND TRUE</span><span class="pun">)</span></li><li><a name="355"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">UFCONFIG_FOUND TRUE</span><span class="pun">)</span></li><li><a name="356"></a></li><li><a name="357"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY NAMES suitesparseconfig</span></li><li><a name="358"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="359"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">})</span></li><li><a name="360"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found SuiteSparse_config library: &quot;</span></li><li><a name="361"></a><span class="pln">    </span><span class="str">&quot;${SUITESPARSE_CONFIG_LIBRARY}&quot;</span><span class="pun">)</span></li><li><a name="362"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">})</span></li><li><a name="363"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Did not find SuiteSparse_config library (should be present &quot;</span></li><li><a name="364"></a><span class="pln">    </span><span class="str">&quot;in SuiteSparse &gt;= v4 installs).&quot;</span><span class="pun">)</span></li><li><a name="365"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">})</span></li><li><a name="366"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">)</span></li><li><a name="367"></a></li><li><a name="368"></a><span class="pln">FIND_PATH</span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR NAMES </span><span class="typ">SuiteSparse_config</span><span class="pun">.</span><span class="pln">h</span></li><li><a name="369"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="370"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="371"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found SuiteSparse_config header in: &quot;</span></li><li><a name="372"></a><span class="pln">    </span><span class="str">&quot;${SUITESPARSE_CONFIG_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="373"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">UFCONFIG_FOUND FALSE</span><span class="pun">)</span></li><li><a name="374"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="375"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Did not find SuiteSparse_config header (should be present &quot;</span></li><li><a name="376"></a><span class="pln">    </span><span class="str">&quot;in SuiteSparse &gt;= v4 installs).&quot;</span><span class="pun">)</span></li><li><a name="377"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="378"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="379"></a></li><li><a name="380"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">}</span><span class="pln"> AND</span></li><li><a name="381"></a><span class="pln">    EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="382"></a><span class="pln">  </span><span class="com"># SuiteSparse_config (SuiteSparse version &gt;= 4) requires librt library for</span></li><li><a name="383"></a><span class="pln">  </span><span class="com"># timing by default when compiled on Linux or Unix, but not on OSX (which</span></li><li><a name="384"></a><span class="pln">  </span><span class="com"># does not have librt).</span></li><li><a name="385"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">CMAKE_SYSTEM_NAME MATCHES </span><span class="str">&quot;Linux&quot;</span><span class="pln"> OR UNIX AND NOT APPLE</span><span class="pun">)</span></li><li><a name="386"></a><span class="pln">    FIND_LIBRARY</span><span class="pun">(</span><span class="pln">LIBRT_LIBRARY NAMES rt</span></li><li><a name="387"></a><span class="pln">      PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="388"></a><span class="pln">    IF </span><span class="pun">(</span><span class="pln">LIBRT_LIBRARY</span><span class="pun">)</span></li><li><a name="389"></a><span class="pln">      MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Adding librt: ${LIBRT_LIBRARY} to &quot;</span></li><li><a name="390"></a><span class="pln">        </span><span class="str">&quot;SuiteSparse_config libraries (required on Linux &amp; Unix [not OSX] if &quot;</span></li><li><a name="391"></a><span class="pln">        </span><span class="str">&quot;SuiteSparse is compiled with timing).&quot;</span><span class="pun">)</span></li><li><a name="392"></a><span class="pln">    ELSE </span><span class="pun">(</span><span class="pln">LIBRT_LIBRARY</span><span class="pun">)</span></li><li><a name="393"></a><span class="pln">      MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Could not find librt, but found SuiteSparse_config, &quot;</span></li><li><a name="394"></a><span class="pln">        </span><span class="str">&quot;assuming that SuiteSparse was compiled without timing.&quot;</span><span class="pun">)</span></li><li><a name="395"></a><span class="pln">    ENDIF </span><span class="pun">(</span><span class="pln">LIBRT_LIBRARY</span><span class="pun">)</span></li><li><a name="396"></a><span class="pln">    MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">LIBRT_LIBRARY</span><span class="pun">)</span></li><li><a name="397"></a><span class="pln">    LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_CONFIG_LIBRARY $</span><span class="pun">{</span><span class="pln">LIBRT_LIBRARY</span><span class="pun">})</span></li><li><a name="398"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">CMAKE_SYSTEM_NAME MATCHES </span><span class="str">&quot;Linux&quot;</span><span class="pln"> OR UNIX AND NOT APPLE</span><span class="pun">)</span></li><li><a name="399"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">}</span><span class="pln"> AND</span></li><li><a name="400"></a><span class="pln">      EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="401"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND FALSE</span><span class="pun">)</span></li><li><a name="402"></a><span class="pln">  FIND_PATH</span><span class="pun">(</span><span class="pln">UFCONFIG_INCLUDE_DIR NAMES </span><span class="typ">UFconfig</span><span class="pun">.</span><span class="pln">h</span></li><li><a name="403"></a><span class="pln">    PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_INCLUDE_DIRS</span><span class="pun">})</span></li><li><a name="404"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">UFCONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="405"></a><span class="pln">    MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found UFconfig header in: ${UFCONFIG_INCLUDE_DIR}&quot;</span><span class="pun">)</span></li><li><a name="406"></a><span class="pln">  ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">UFCONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="407"></a><span class="pln">    MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Did not find UFconfig header (should be present &quot;</span></li><li><a name="408"></a><span class="pln">      </span><span class="str">&quot;in SuiteSparse &lt; v4 installs)&quot;</span><span class="pun">)</span></li><li><a name="409"></a><span class="pln">    SET</span><span class="pun">(</span><span class="pln">UFCONFIG_FOUND FALSE</span><span class="pun">)</span></li><li><a name="410"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">UFCONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="411"></a><span class="pln">  MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">UFCONFIG_INCLUDE_DIR</span><span class="pun">)</span></li><li><a name="412"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">}</span><span class="pln"> AND</span></li><li><a name="413"></a><span class="pln">       EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="414"></a></li><li><a name="415"></a><span class="com"># Extract the SuiteSparse version from the appropriate header (UFconfig.h for</span></li><li><a name="416"></a><span class="com"># &lt;= v3, SuiteSparse_config.h for &gt;= v4).</span></li><li><a name="417"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">UFCONFIG_FOUND</span><span class="pun">)</span></li><li><a name="418"></a><span class="pln">  </span><span class="com"># SuiteSparse version &lt;= 3.</span></li><li><a name="419"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_VERSION_FILE $</span><span class="pun">{</span><span class="pln">UFCONFIG_INCLUDE_DIR</span><span class="pun">}/</span><span class="typ">UFconfig</span><span class="pun">.</span><span class="pln">h</span><span class="pun">)</span></li><li><a name="420"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">NOT EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">})</span></li><li><a name="421"></a><span class="pln">    SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span></li><li><a name="422"></a><span class="pln">      </span><span class="str">&quot;Could not find file: ${SUITESPARSE_VERSION_FILE} containing version &quot;</span></li><li><a name="423"></a><span class="pln">      </span><span class="str">&quot;information for &lt;= v3 SuiteSparse installs, but UFconfig was found &quot;</span></li><li><a name="424"></a><span class="pln">      </span><span class="str">&quot;(only present in &lt;= v3 installs).&quot;</span><span class="pun">)</span></li><li><a name="425"></a><span class="pln">  ELSE </span><span class="pun">(</span><span class="pln">NOT EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">})</span></li><li><a name="426"></a><span class="pln">    FILE</span><span class="pun">(</span><span class="pln">READ $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">}</span><span class="pln"> UFCONFIG_CONTENTS</span><span class="pun">)</span></li><li><a name="427"></a></li><li><a name="428"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX MATCH </span><span class="str">&quot;#define SUITESPARSE_MAIN_VERSION [0-9]+&quot;</span></li><li><a name="429"></a><span class="pln">      SUITESPARSE_MAIN_VERSION </span><span class="str">&quot;${UFCONFIG_CONTENTS}&quot;</span><span class="pun">)</span></li><li><a name="430"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX REPLACE </span><span class="str">&quot;#define SUITESPARSE_MAIN_VERSION ([0-9]+)&quot;</span><span class="pln"> </span><span class="str">&quot;\\1&quot;</span></li><li><a name="431"></a><span class="pln">      SUITESPARSE_MAIN_VERSION </span><span class="str">&quot;${SUITESPARSE_MAIN_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="432"></a></li><li><a name="433"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX MATCH </span><span class="str">&quot;#define SUITESPARSE_SUB_VERSION [0-9]+&quot;</span></li><li><a name="434"></a><span class="pln">      SUITESPARSE_SUB_VERSION </span><span class="str">&quot;${UFCONFIG_CONTENTS}&quot;</span><span class="pun">)</span></li><li><a name="435"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX REPLACE </span><span class="str">&quot;#define SUITESPARSE_SUB_VERSION ([0-9]+)&quot;</span><span class="pln"> </span><span class="str">&quot;\\1&quot;</span></li><li><a name="436"></a><span class="pln">      SUITESPARSE_SUB_VERSION </span><span class="str">&quot;${SUITESPARSE_SUB_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="437"></a></li><li><a name="438"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX MATCH </span><span class="str">&quot;#define SUITESPARSE_SUBSUB_VERSION [0-9]+&quot;</span></li><li><a name="439"></a><span class="pln">      SUITESPARSE_SUBSUB_VERSION </span><span class="str">&quot;${UFCONFIG_CONTENTS}&quot;</span><span class="pun">)</span></li><li><a name="440"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX REPLACE </span><span class="str">&quot;#define SUITESPARSE_SUBSUB_VERSION ([0-9]+)&quot;</span><span class="pln"> </span><span class="str">&quot;\\1&quot;</span></li><li><a name="441"></a><span class="pln">      SUITESPARSE_SUBSUB_VERSION </span><span class="str">&quot;${SUITESPARSE_SUBSUB_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="442"></a></li><li><a name="443"></a><span class="pln">    </span><span class="com"># This is on a single line s/t CMake does not interpret it as a list of</span></li><li><a name="444"></a><span class="pln">    </span><span class="com"># elements and insert &#39;;&#39; separators which would result in 4.;2.;1 nonsense.</span></li><li><a name="445"></a><span class="pln">    SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_VERSION</span></li><li><a name="446"></a><span class="pln">      </span><span class="str">&quot;${SUITESPARSE_MAIN_VERSION}.${SUITESPARSE_SUB_VERSION}.${SUITESPARSE_SUBSUB_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="447"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">NOT EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">})</span></li><li><a name="448"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">UFCONFIG_FOUND</span><span class="pun">)</span></li><li><a name="449"></a></li><li><a name="450"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND</span><span class="pun">)</span></li><li><a name="451"></a><span class="pln">  </span><span class="com"># SuiteSparse version &gt;= 4.</span></li><li><a name="452"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_VERSION_FILE</span></li><li><a name="453"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">}/</span><span class="typ">SuiteSparse_config</span><span class="pun">.</span><span class="pln">h</span><span class="pun">)</span></li><li><a name="454"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">NOT EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">})</span></li><li><a name="455"></a><span class="pln">    SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span></li><li><a name="456"></a><span class="pln">      </span><span class="str">&quot;Could not find file: ${SUITESPARSE_VERSION_FILE} containing version &quot;</span></li><li><a name="457"></a><span class="pln">      </span><span class="str">&quot;information for &gt;= v4 SuiteSparse installs, but SuiteSparse_config was &quot;</span></li><li><a name="458"></a><span class="pln">      </span><span class="str">&quot;found (only present in &gt;= v4 installs).&quot;</span><span class="pun">)</span></li><li><a name="459"></a><span class="pln">  ELSE </span><span class="pun">(</span><span class="pln">NOT EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">})</span></li><li><a name="460"></a><span class="pln">    FILE</span><span class="pun">(</span><span class="pln">READ $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">}</span><span class="pln"> SUITESPARSE_CONFIG_CONTENTS</span><span class="pun">)</span></li><li><a name="461"></a></li><li><a name="462"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX MATCH </span><span class="str">&quot;#define SUITESPARSE_MAIN_VERSION [0-9]+&quot;</span></li><li><a name="463"></a><span class="pln">      SUITESPARSE_MAIN_VERSION </span><span class="str">&quot;${SUITESPARSE_CONFIG_CONTENTS}&quot;</span><span class="pun">)</span></li><li><a name="464"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX REPLACE </span><span class="str">&quot;#define SUITESPARSE_MAIN_VERSION ([0-9]+)&quot;</span><span class="pln"> </span><span class="str">&quot;\\1&quot;</span></li><li><a name="465"></a><span class="pln">      SUITESPARSE_MAIN_VERSION </span><span class="str">&quot;${SUITESPARSE_MAIN_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="466"></a></li><li><a name="467"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX MATCH </span><span class="str">&quot;#define SUITESPARSE_SUB_VERSION [0-9]+&quot;</span></li><li><a name="468"></a><span class="pln">      SUITESPARSE_SUB_VERSION </span><span class="str">&quot;${SUITESPARSE_CONFIG_CONTENTS}&quot;</span><span class="pun">)</span></li><li><a name="469"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX REPLACE </span><span class="str">&quot;#define SUITESPARSE_SUB_VERSION ([0-9]+)&quot;</span><span class="pln"> </span><span class="str">&quot;\\1&quot;</span></li><li><a name="470"></a><span class="pln">      SUITESPARSE_SUB_VERSION </span><span class="str">&quot;${SUITESPARSE_SUB_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="471"></a></li><li><a name="472"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX MATCH </span><span class="str">&quot;#define SUITESPARSE_SUBSUB_VERSION [0-9]+&quot;</span></li><li><a name="473"></a><span class="pln">      SUITESPARSE_SUBSUB_VERSION </span><span class="str">&quot;${SUITESPARSE_CONFIG_CONTENTS}&quot;</span><span class="pun">)</span></li><li><a name="474"></a><span class="pln">    STRING</span><span class="pun">(</span><span class="pln">REGEX REPLACE </span><span class="str">&quot;#define SUITESPARSE_SUBSUB_VERSION ([0-9]+)&quot;</span><span class="pln"> </span><span class="str">&quot;\\1&quot;</span></li><li><a name="475"></a><span class="pln">      SUITESPARSE_SUBSUB_VERSION </span><span class="str">&quot;${SUITESPARSE_SUBSUB_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="476"></a></li><li><a name="477"></a><span class="pln">    </span><span class="com"># This is on a single line s/t CMake does not interpret it as a list of</span></li><li><a name="478"></a><span class="pln">    </span><span class="com"># elements and insert &#39;;&#39; separators which would result in 4.;2.;1 nonsense.</span></li><li><a name="479"></a><span class="pln">    SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_VERSION</span></li><li><a name="480"></a><span class="pln">      </span><span class="str">&quot;${SUITESPARSE_MAIN_VERSION}.${SUITESPARSE_SUB_VERSION}.${SUITESPARSE_SUBSUB_VERSION}&quot;</span><span class="pun">)</span></li><li><a name="481"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">NOT EXISTS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_VERSION_FILE</span><span class="pun">})</span></li><li><a name="482"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND</span><span class="pun">)</span></li><li><a name="483"></a></li><li><a name="484"></a><span class="com"># METIS (Optional dependency).</span></li><li><a name="485"></a><span class="pln">FIND_LIBRARY</span><span class="pun">(</span><span class="pln">METIS_LIBRARY NAMES metis</span></li><li><a name="486"></a><span class="pln">  PATHS $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CHECK_LIBRARY_DIRS</span><span class="pun">})</span></li><li><a name="487"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">METIS_LIBRARY</span><span class="pun">})</span></li><li><a name="488"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found METIS library: ${METIS_LIBRARY}.&quot;</span><span class="pun">)</span></li><li><a name="489"></a><span class="pln">ELSE </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">METIS_LIBRARY</span><span class="pun">})</span></li><li><a name="490"></a><span class="pln">  MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Did not find METIS library (optional SuiteSparse dependency)&quot;</span><span class="pun">)</span></li><li><a name="491"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">EXISTS $</span><span class="pun">{</span><span class="pln">METIS_LIBRARY</span><span class="pun">})</span></li><li><a name="492"></a><span class="pln">MARK_AS_ADVANCED</span><span class="pun">(</span><span class="pln">METIS_LIBRARY</span><span class="pun">)</span></li><li><a name="493"></a></li><li><a name="494"></a><span class="com"># Only mark SuiteSparse as found if all required dependencies have been found.</span></li><li><a name="495"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_FOUND FALSE</span><span class="pun">)</span></li><li><a name="496"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">AMD_FOUND AND</span></li><li><a name="497"></a><span class="pln">    CAMD_FOUND AND</span></li><li><a name="498"></a><span class="pln">    COLAMD_FOUND AND</span></li><li><a name="499"></a><span class="pln">    CCOLAMD_FOUND AND</span></li><li><a name="500"></a><span class="pln">    CHOLMOD_FOUND AND</span></li><li><a name="501"></a><span class="pln">    SUITESPARSEQR_FOUND AND</span></li><li><a name="502"></a><span class="pln">    </span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND OR UFCONFIG_FOUND</span><span class="pun">)</span><span class="pln"> AND</span></li><li><a name="503"></a><span class="pln">    BLAS_FOUND AND</span></li><li><a name="504"></a><span class="pln">    LAPACK_FOUND</span><span class="pun">)</span></li><li><a name="505"></a><span class="pln">  SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_FOUND TRUE</span><span class="pun">)</span></li><li><a name="506"></a><span class="pln">  LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_INCLUDE_DIRS</span></li><li><a name="507"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">AMD_INCLUDE_DIR</span><span class="pun">}</span></li><li><a name="508"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">CAMD_INCLUDE_DIR</span><span class="pun">}</span></li><li><a name="509"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">COLAMD_INCLUDE_DIR</span><span class="pun">}</span></li><li><a name="510"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">CCOLAMD_INCLUDE_DIR</span><span class="pun">}</span></li><li><a name="511"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">CHOLMOD_INCLUDE_DIR</span><span class="pun">}</span></li><li><a name="512"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="513"></a><span class="pln">  </span><span class="com"># Handle config separately, as otherwise at least one of them will be set</span></li><li><a name="514"></a><span class="pln">  </span><span class="com"># to NOTFOUND which would cause any check on SUITESPARSE_INCLUDE_DIRS to fail.</span></li><li><a name="515"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND</span><span class="pun">)</span></li><li><a name="516"></a><span class="pln">    LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_INCLUDE_DIRS</span></li><li><a name="517"></a><span class="pln">      $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="518"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND</span><span class="pun">)</span></li><li><a name="519"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">UFCONFIG_FOUND</span><span class="pun">)</span></li><li><a name="520"></a><span class="pln">    LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_INCLUDE_DIRS</span></li><li><a name="521"></a><span class="pln">      $</span><span class="pun">{</span><span class="pln">UFCONFIG_INCLUDE_DIR</span><span class="pun">})</span></li><li><a name="522"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">UFCONFIG_FOUND</span><span class="pun">)</span></li><li><a name="523"></a><span class="pln">  </span><span class="com"># As SuiteSparse includes are often all in the same directory, remove any</span></li><li><a name="524"></a><span class="pln">  </span><span class="com"># repetitions.</span></li><li><a name="525"></a><span class="pln">  LIST</span><span class="pun">(</span><span class="pln">REMOVE_DUPLICATES SUITESPARSE_INCLUDE_DIRS</span><span class="pun">)</span></li><li><a name="526"></a></li><li><a name="527"></a><span class="pln">  </span><span class="com"># Important: The ordering of these libraries is *NOT* arbitrary, as these</span></li><li><a name="528"></a><span class="pln">  </span><span class="com"># could potentially be static libraries their link ordering is important.</span></li><li><a name="529"></a><span class="pln">  LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_LIBRARIES</span></li><li><a name="530"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">SUITESPARSEQR_LIBRARY</span><span class="pun">}</span></li><li><a name="531"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">CHOLMOD_LIBRARY</span><span class="pun">}</span></li><li><a name="532"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">CCOLAMD_LIBRARY</span><span class="pun">}</span></li><li><a name="533"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">CAMD_LIBRARY</span><span class="pun">}</span></li><li><a name="534"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">COLAMD_LIBRARY</span><span class="pun">}</span></li><li><a name="535"></a><span class="pln">    $</span><span class="pun">{</span><span class="pln">AMD_LIBRARY</span><span class="pun">})</span></li><li><a name="536"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND</span><span class="pun">)</span></li><li><a name="537"></a><span class="pln">    LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_LIBRARIES</span></li><li><a name="538"></a><span class="pln">      $</span><span class="pun">{</span><span class="pln">SUITESPARSE_CONFIG_LIBRARY</span><span class="pun">})</span></li><li><a name="539"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">SUITESPARSE_CONFIG_FOUND</span><span class="pun">)</span></li><li><a name="540"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">METIS_FOUND</span><span class="pun">)</span></li><li><a name="541"></a><span class="pln">    LIST</span><span class="pun">(</span><span class="pln">APPEND SUITESPARSE_LIBRARIES</span></li><li><a name="542"></a><span class="pln">      $</span><span class="pun">{</span><span class="pln">METIS_LIBRARY</span><span class="pun">})</span></li><li><a name="543"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">METIS_FOUND</span><span class="pun">)</span></li><li><a name="544"></a><span class="pln">ELSE</span><span class="pun">()</span></li><li><a name="545"></a><span class="pln">  SUITESPARSE_REPORT_NOT_FOUND</span><span class="pun">(</span></li><li><a name="546"></a><span class="pln">    </span><span class="str">&quot;Failed to find some/all required components of SuiteSparse.&quot;</span><span class="pun">)</span></li><li><a name="547"></a><span class="pln">ENDIF</span><span class="pun">()</span></li><li><a name="548"></a></li><li><a name="549"></a><span class="com"># Determine if we are running on Ubuntu with the package install of SuiteSparse</span></li><li><a name="550"></a><span class="com"># which is broken and does not support linking a shared library.</span></li><li><a name="551"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_IS_BROKEN_SHARED_LINKING_UBUNTU_SYSTEM_VERSION FALSE</span><span class="pun">)</span></li><li><a name="552"></a><span class="pln">IF </span><span class="pun">(</span><span class="pln">CMAKE_SYSTEM_NAME MATCHES </span><span class="str">&quot;Linux&quot;</span><span class="pln"> AND</span></li><li><a name="553"></a><span class="pln">    SUITESPARSE_VERSION VERSION_EQUAL </span><span class="lit">3.4</span><span class="pun">.</span><span class="lit">0</span><span class="pun">)</span></li><li><a name="554"></a><span class="pln">  FIND_PROGRAM</span><span class="pun">(</span><span class="pln">LSB_RELEASE_EXECUTABLE lsb_release</span><span class="pun">)</span></li><li><a name="555"></a><span class="pln">  IF </span><span class="pun">(</span><span class="pln">LSB_RELEASE_EXECUTABLE</span><span class="pun">)</span></li><li><a name="556"></a><span class="pln">    </span><span class="com"># Any even moderately recent Ubuntu release (likely to be affected by</span></li><li><a name="557"></a><span class="pln">    </span><span class="com"># this bug) should have lsb_release, if it isn&#39;t present we are likely</span></li><li><a name="558"></a><span class="pln">    </span><span class="com"># on a different Linux distribution (should be fine).</span></li><li><a name="559"></a></li><li><a name="560"></a><span class="pln">    EXECUTE_PROCESS</span><span class="pun">(</span><span class="pln">COMMAND $</span><span class="pun">{</span><span class="pln">LSB_RELEASE_EXECUTABLE</span><span class="pun">}</span><span class="pln"> </span><span class="pun">-</span><span class="pln">si</span></li><li><a name="561"></a><span class="pln">      OUTPUT_VARIABLE LSB_DISTRIBUTOR_ID</span></li><li><a name="562"></a><span class="pln">      OUTPUT_STRIP_TRAILING_WHITESPACE</span><span class="pun">)</span></li><li><a name="563"></a></li><li><a name="564"></a><span class="pln">    IF </span><span class="pun">(</span><span class="pln">LSB_DISTRIBUTOR_ID MATCHES </span><span class="str">&quot;Ubuntu&quot;</span><span class="pln"> AND</span></li><li><a name="565"></a><span class="pln">        SUITESPARSE_LIBRARIES MATCHES </span><span class="str">&quot;/usr/lib/libamd&quot;</span><span class="pun">)</span></li><li><a name="566"></a><span class="pln">      </span><span class="com"># We are on Ubuntu, and the SuiteSparse version matches the broken</span></li><li><a name="567"></a><span class="pln">      </span><span class="com"># system install version and is a system install.</span></li><li><a name="568"></a><span class="pln">      SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_IS_BROKEN_SHARED_LINKING_UBUNTU_SYSTEM_VERSION TRUE</span><span class="pun">)</span></li><li><a name="569"></a><span class="pln">      MESSAGE</span><span class="pun">(</span><span class="pln">STATUS </span><span class="str">&quot;Found system install of SuiteSparse &quot;</span></li><li><a name="570"></a><span class="pln">        </span><span class="str">&quot;${SUITESPARSE_VERSION} running on Ubuntu, which has a known bug &quot;</span></li><li><a name="571"></a><span class="pln">        </span><span class="str">&quot;preventing linking of shared libraries (static linking unaffected).&quot;</span><span class="pun">)</span></li><li><a name="572"></a><span class="pln">    ENDIF </span><span class="pun">(</span><span class="pln">LSB_DISTRIBUTOR_ID MATCHES </span><span class="str">&quot;Ubuntu&quot;</span><span class="pln"> AND</span></li><li><a name="573"></a><span class="pln">      SUITESPARSE_LIBRARIES MATCHES </span><span class="str">&quot;/usr/lib/libamd&quot;</span><span class="pun">)</span></li><li><a name="574"></a><span class="pln">  ENDIF </span><span class="pun">(</span><span class="pln">LSB_RELEASE_EXECUTABLE</span><span class="pun">)</span></li><li><a name="575"></a><span class="pln">ENDIF </span><span class="pun">(</span><span class="pln">CMAKE_SYSTEM_NAME MATCHES </span><span class="str">&quot;Linux&quot;</span><span class="pln"> AND</span></li><li><a name="576"></a><span class="pln">  SUITESPARSE_VERSION VERSION_EQUAL </span><span class="lit">3.4</span><span class="pun">.</span><span class="lit">0</span><span class="pun">)</span></li><li><a name="577"></a></li><li><a name="578"></a><span class="com"># Handle REQUIRED and QUIET arguments to FIND_PACKAGE</span></li><li><a name="579"></a><span class="pln">INCLUDE</span><span class="pun">(</span><span class="typ">FindPackageHandleStandardArgs</span><span class="pun">)</span></li><li><a name="580"></a><span class="com"># A change to CMake after release 2.8.10.2 means that</span></li><li><a name="581"></a><span class="com"># FindPackageHandleStandardArgs() unsets &lt;LibraryName&gt;_FOUND without checking</span></li><li><a name="582"></a><span class="com"># if it is one of the variables passed whose existence &amp; validity is verified</span></li><li><a name="583"></a><span class="com"># by FindPackageHandleStandardArgs() in conjunction with handling the REQUIRED</span></li><li><a name="584"></a><span class="com"># and QUIET optional arguments, as such we use an intermediary variable.</span></li><li><a name="585"></a><span class="pln">SET</span><span class="pun">(</span><span class="pln">SUITESPARSE_FOUND_COPY $</span><span class="pun">{</span><span class="pln">SUITESPARSE_FOUND</span><span class="pun">})</span></li><li><a name="586"></a><span class="pln">FIND_PACKAGE_HANDLE_STANDARD_ARGS</span><span class="pun">(</span><span class="typ">SuiteSparse</span></li><li><a name="587"></a><span class="pln">  REQUIRED_VARS SUITESPARSE_INCLUDE_DIRS SUITESPARSE_LIBRARIES SUITESPARSE_FOUND_COPY</span></li><li><a name="588"></a><span class="pln">  VERSION_VAR SUITESPARSE_VERSION</span><span class="pun">)</span></li></ol><div class="footer">Powered by <a href="https://code.google.com/p/gitiles/">Gitiles</a></div></body></html>