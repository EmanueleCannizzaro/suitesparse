
===========================================================
title: [AG-Monien/cage_G_05]
status 0
key [2436G5] nrow 58 ncol 58
mkind 1 skind 1 asize 174 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 58 ncol 58 nnz 87 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


CAMD demo:

camd version 2.3, Jun 20, 2012:  approximate minimum degree ordering:
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes


Input matrix:  58-by-58, with 87 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to CAMD, since CAMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since CAMD ignores them.

Column: 0, number of entries: 3, with row indices in Ai [0 ... 2]:
    row indices: 1 18 57

Column: 1, number of entries: 2, with row indices in Ai [3 ... 4]:
    row indices: 2 37

Column: 2, number of entries: 2, with row indices in Ai [5 ... 6]:
    row indices: 3 10

Column: 3, number of entries: 2, with row indices in Ai [7 ... 8]:
    row indices: 4 31

Column: 4, number of entries: 2, with row indices in Ai [9 ... 10]:
    row indices: 5 25

Column: 5, number of entries: 2, with row indices in Ai [11 ... 12]:
    row indices: 6 41

Column: 6, number of entries: 2, with row indices in Ai [13 ... 14]:
    row indices: 7 54

Column: 7, number of entries: 2, with row indices in Ai [15 ... 16]:
    row indices: 8 16

Column: 8, number of entries: 2, with row indices in Ai [17 ... 18]:
    row indices: 9 22

Column: 9, number of entries: 2, with row indices in Ai [19 ... 20]:
    row indices: 10 49

Column: 10, number of entries: 1, with row indices in Ai [21 ... 21]:
    row indices: 11

Column: 11, number of entries: 2, with row indices in Ai [22 ... 23]:
    row indices: 12 43

Column: 12, number of entries: 2, with row indices in Ai [24 ... 25]:
    row indices: 13 53

Column: 13, number of entries: 2, with row indices in Ai [26 ... 27]:
    row indices: 14 26

Column: 14, number of entries: 2, with row indices in Ai [28 ... 29]:
    row indices: 15 38

Column: 15, number of entries: 2, with row indices in Ai [30 ... 31]:
    row indices: 16 32

Column: 16, number of entries: 1, with row indices in Ai [32 ... 32]:
    row indices: 17

Column: 17, number of entries: 2, with row indices in Ai [33 ... 34]:
    row indices: 18 45

Column: 18, number of entries: 1, with row indices in Ai [35 ... 35]:
    row indices: 19

Column: 19, number of entries: 2, with row indices in Ai [36 ... 37]:
    row indices: 20 52

Column: 20, number of entries: 2, with row indices in Ai [38 ... 39]:
    row indices: 21 40

Column: 21, number of entries: 2, with row indices in Ai [40 ... 41]:
    row indices: 22 30

Column: 22, number of entries: 1, with row indices in Ai [42 ... 42]:
    row indices: 23

Column: 23, number of entries: 2, with row indices in Ai [43 ... 44]:
    row indices: 24 36

Column: 24, number of entries: 2, with row indices in Ai [45 ... 46]:
    row indices: 25 46

Column: 25, number of entries: 1, with row indices in Ai [47 ... 47]:
    row indices: 26

Column: 26, number of entries: 1, with row indices in Ai [48 ... 48]:
    row indices: 27

Column: 27, number of entries: 2, with row indices in Ai [49 ... 50]:
    row indices: 28 57

Column: 28, number of entries: 2, with row indices in Ai [51 ... 52]:
    row indices: 29 50

Column: 29, number of entries: 2, with row indices in Ai [53 ... 54]:
    row indices: 30 44

Column: 30, number of entries: 1, with row indices in Ai [55 ... 55]:
    row indices: 31

Column: 31, number of entries: 1, with row indices in Ai [56 ... 56]:
    row indices: 32

Column: 32, number of entries: 1, with row indices in Ai [57 ... 57]:
    row indices: 33

Column: 33, number of entries: 2, with row indices in Ai [58 ... 59]:
    row indices: 34 56

Column: 34, number of entries: 2, with row indices in Ai [60 ... 61]:
    row indices: 35 42

Column: 35, number of entries: 2, with row indices in Ai [62 ... 63]:
    row indices: 36 51

Column: 36, number of entries: 1, with row indices in Ai [64 ... 64]:
    row indices: 37

Column: 37, number of entries: 1, with row indices in Ai [65 ... 65]:
    row indices: 38

Column: 38, number of entries: 1, with row indices in Ai [66 ... 66]:
    row indices: 39

Column: 39, number of entries: 2, with row indices in Ai [67 ... 68]:
    row indices: 40 48

Column: 40, number of entries: 1, with row indices in Ai [69 ... 69]:
    row indices: 41

Column: 41, number of entries: 1, with row indices in Ai [70 ... 70]:
    row indices: 42

Column: 42, number of entries: 1, with row indices in Ai [71 ... 71]:
    row indices: 43

Column: 43, number of entries: 1, with row indices in Ai [72 ... 72]:
    row indices: 44

Column: 44, number of entries: 1, with row indices in Ai [73 ... 73]:
    row indices: 45

Column: 45, number of entries: 1, with row indices in Ai [74 ... 74]:
    row indices: 46

Column: 46, number of entries: 1, with row indices in Ai [75 ... 75]:
    row indices: 47

Column: 47, number of entries: 2, with row indices in Ai [76 ... 77]:
    row indices: 48 55

Column: 48, number of entries: 1, with row indices in Ai [78 ... 78]:
    row indices: 49

Column: 49, number of entries: 1, with row indices in Ai [79 ... 79]:
    row indices: 50

Column: 50, number of entries: 1, with row indices in Ai [80 ... 80]:
    row indices: 51

Column: 51, number of entries: 1, with row indices in Ai [81 ... 81]:
    row indices: 52

Column: 52, number of entries: 1, with row indices in Ai [82 ... 82]:
    row indices: 53

Column: 53, number of entries: 1, with row indices in Ai [83 ... 83]:
    row indices: 54

Column: 54, number of entries: 1, with row indices in Ai [84 ... 84]:
    row indices: 55

Column: 55, number of entries: 1, with row indices in Ai [85 ... 85]:
    row indices: 56

Column: 56, number of entries: 1, with row indices in Ai [86 ... 86]:
    row indices: 57

Column: 57, number of entries: 0, with row indices in Ai [87 ... 86]:
    row indices:

return value from camd_order: 0 (should be 0)

camd:  approximate minimum degree ordering, results:
    status: OK
    n, dimension of A:                                  58
    nz, number of nonzeros in A:                        87
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       174
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              3184
    # of memory compactions:                            1

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 323
    nonzeros in L (including diagonal):                 381
    # divide operations for LDL' or LU:                 323
    # multiply-subtract operations for LDL':            1483
    # multiply-subtract operations for LU:              2643
    max nz. in any column of L (incl. diagonal):        17

    chol flop count for real A, sqrt counted as 1 flop: 3347
    LDL' flop count for real A:                         3289
    LDL' flop count for complex A:                      14771
    LU flop count for real A (with no pivoting):        5609
    LU flop count for complex A (with no pivoting):     24051

Permutation vector:
  2  1  5  4 31  3  7 26 13 15 38 14 17 19 18 22 21 40 20 16 11 28 44 29 33 42 34 36 51 35 43 49 48  9 46 24 53 55 54 47 57  0 39  8 10 52 23 45 12  6 25 27 41 30 32 50 56 37

Inverse permutation vector:
 41  1  0  5  3  2 49  6 43 33 44 20 48  8 11  9 19 12 14 13 18 16 15 46 35 50  7 51 21 23 53  4 54 24 26 29 27 57 10 42 17 52 25 30 22 47 34 39 32 31 55 28 45 36 38 37 56 40

Execution of CAMD demo: OK
