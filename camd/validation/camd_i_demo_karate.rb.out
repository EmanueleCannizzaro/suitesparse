
===========================================================
title: [Newman/karate; 1977; W. Zachary; ed: M. Newman]
status 0
key [2399] nrow 34 ncol 34
mkind 1 skind 1 asize 156 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 34 ncol 34 nnz 78 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


CAMD demo:

camd version 2.3, Jun 20, 2012:  approximate minimum degree ordering:
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes


Input matrix:  34-by-34, with 78 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to CAMD, since CAMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since CAMD ignores them.

Column: 0, number of entries: 16, with row indices in Ai [0 ... 15]:
    row indices: 1 2 3 4 5 6 7 8 10 11 12 13 17 19 21 31

Column: 1, number of entries: 8, with row indices in Ai [16 ... 23]:
    row indices: 2 3 7 13 17 19 21 30

Column: 2, number of entries: 8, with row indices in Ai [24 ... 31]:
    row indices: 3 7 8 9 13 27 28 32

Column: 3, number of entries: 3, with row indices in Ai [32 ... 34]:
    row indices: 7 12 13

Column: 4, number of entries: 2, with row indices in Ai [35 ... 36]:
    row indices: 6 10

Column: 5, number of entries: 3, with row indices in Ai [37 ... 39]:
    row indices: 6 10 16

Column: 6, number of entries: 1, with row indices in Ai [40 ... 40]:
    row indices: 16

Column: 7, number of entries: 0, with row indices in Ai [41 ... 40]:
    row indices:

Column: 8, number of entries: 3, with row indices in Ai [41 ... 43]:
    row indices: 30 32 33

Column: 9, number of entries: 1, with row indices in Ai [44 ... 44]:
    row indices: 33

Column: 10, number of entries: 0, with row indices in Ai [45 ... 44]:
    row indices:

Column: 11, number of entries: 0, with row indices in Ai [45 ... 44]:
    row indices:

Column: 12, number of entries: 0, with row indices in Ai [45 ... 44]:
    row indices:

Column: 13, number of entries: 1, with row indices in Ai [45 ... 45]:
    row indices: 33

Column: 14, number of entries: 2, with row indices in Ai [46 ... 47]:
    row indices: 32 33

Column: 15, number of entries: 2, with row indices in Ai [48 ... 49]:
    row indices: 32 33

Column: 16, number of entries: 0, with row indices in Ai [50 ... 49]:
    row indices:

Column: 17, number of entries: 0, with row indices in Ai [50 ... 49]:
    row indices:

Column: 18, number of entries: 2, with row indices in Ai [50 ... 51]:
    row indices: 32 33

Column: 19, number of entries: 1, with row indices in Ai [52 ... 52]:
    row indices: 33

Column: 20, number of entries: 2, with row indices in Ai [53 ... 54]:
    row indices: 32 33

Column: 21, number of entries: 0, with row indices in Ai [55 ... 54]:
    row indices:

Column: 22, number of entries: 2, with row indices in Ai [55 ... 56]:
    row indices: 32 33

Column: 23, number of entries: 5, with row indices in Ai [57 ... 61]:
    row indices: 25 27 29 32 33

Column: 24, number of entries: 3, with row indices in Ai [62 ... 64]:
    row indices: 25 27 31

Column: 25, number of entries: 1, with row indices in Ai [65 ... 65]:
    row indices: 31

Column: 26, number of entries: 2, with row indices in Ai [66 ... 67]:
    row indices: 29 33

Column: 27, number of entries: 1, with row indices in Ai [68 ... 68]:
    row indices: 33

Column: 28, number of entries: 2, with row indices in Ai [69 ... 70]:
    row indices: 31 33

Column: 29, number of entries: 2, with row indices in Ai [71 ... 72]:
    row indices: 32 33

Column: 30, number of entries: 2, with row indices in Ai [73 ... 74]:
    row indices: 32 33

Column: 31, number of entries: 2, with row indices in Ai [75 ... 76]:
    row indices: 32 33

Column: 32, number of entries: 1, with row indices in Ai [77 ... 77]:
    row indices: 33

Column: 33, number of entries: 0, with row indices in Ai [78 ... 77]:
    row indices:

return value from camd_order: 0 (should be 0)

camd:  approximate minimum degree ordering, results:
    status: OK
    n, dimension of A:                                  34
    nz, number of nonzeros in A:                        78
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       156
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              2140
    # of memory compactions:                            0

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 90
    nonzeros in L (including diagonal):                 124
    # divide operations for LDL' or LU:                 90
    # multiply-subtract operations for LDL':            185
    # multiply-subtract operations for LU:              280
    max nz. in any column of L (incl. diagonal):        6

    chol flop count for real A, sqrt counted as 1 flop: 494
    LDL' flop count for real A:                         460
    LDL' flop count for complex A:                      2290
    LU flop count for real A (with no pivoting):        650
    LU flop count for complex A (with no pivoting):     3050

Permutation vector:
 12  7  3 16  6  5 10  4 11 21 17 19 13 30 25 24  9 28 27 22 20 18 15 14 26 29 23 31  0  1  8 32 33  2

Inverse permutation vector:
 28 29 33  2  7  5  4  1 30 16  6  8  0 12 23 22  3 10 21 11 20  9 19 26 15 14 24 18 17 25 13 27 31 32

Execution of CAMD demo: OK
