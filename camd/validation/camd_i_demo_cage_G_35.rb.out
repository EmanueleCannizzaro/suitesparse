
===========================================================
title: [AG-Monien/cage_G_35]
status 0
key [2436G35] nrow 30 ncol 30
mkind 1 skind 1 asize 150 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 30 ncol 30 nnz 75 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


CAMD demo:

camd version 2.3, Jun 20, 2012:  approximate minimum degree ordering:
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes


Input matrix:  30-by-30, with 75 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to CAMD, since CAMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since CAMD ignores them.

Column: 0, number of entries: 5, with row indices in Ai [0 ... 4]:
    row indices: 1 2 3 4 5

Column: 1, number of entries: 4, with row indices in Ai [5 ... 8]:
    row indices: 6 7 8 9

Column: 2, number of entries: 4, with row indices in Ai [9 ... 12]:
    row indices: 10 11 12 13

Column: 3, number of entries: 4, with row indices in Ai [13 ... 16]:
    row indices: 14 15 16 17

Column: 4, number of entries: 4, with row indices in Ai [17 ... 20]:
    row indices: 18 19 20 21

Column: 5, number of entries: 4, with row indices in Ai [21 ... 24]:
    row indices: 22 23 24 25

Column: 6, number of entries: 4, with row indices in Ai [25 ... 28]:
    row indices: 10 14 18 22

Column: 7, number of entries: 4, with row indices in Ai [29 ... 32]:
    row indices: 11 15 19 23

Column: 8, number of entries: 4, with row indices in Ai [33 ... 36]:
    row indices: 12 16 20 24

Column: 9, number of entries: 4, with row indices in Ai [37 ... 40]:
    row indices: 13 17 21 25

Column: 10, number of entries: 3, with row indices in Ai [41 ... 43]:
    row indices: 15 20 26

Column: 11, number of entries: 3, with row indices in Ai [44 ... 46]:
    row indices: 14 21 27

Column: 12, number of entries: 3, with row indices in Ai [47 ... 49]:
    row indices: 18 25 28

Column: 13, number of entries: 3, with row indices in Ai [50 ... 52]:
    row indices: 19 24 29

Column: 14, number of entries: 2, with row indices in Ai [53 ... 54]:
    row indices: 25 29

Column: 15, number of entries: 2, with row indices in Ai [55 ... 56]:
    row indices: 24 28

Column: 16, number of entries: 3, with row indices in Ai [57 ... 59]:
    row indices: 21 23 26

Column: 17, number of entries: 3, with row indices in Ai [60 ... 62]:
    row indices: 20 22 27

Column: 18, number of entries: 2, with row indices in Ai [63 ... 64]:
    row indices: 23 27

Column: 19, number of entries: 2, with row indices in Ai [65 ... 66]:
    row indices: 22 26

Column: 20, number of entries: 1, with row indices in Ai [67 ... 67]:
    row indices: 29

Column: 21, number of entries: 1, with row indices in Ai [68 ... 68]:
    row indices: 28

Column: 22, number of entries: 1, with row indices in Ai [69 ... 69]:
    row indices: 28

Column: 23, number of entries: 1, with row indices in Ai [70 ... 70]:
    row indices: 29

Column: 24, number of entries: 1, with row indices in Ai [71 ... 71]:
    row indices: 27

Column: 25, number of entries: 1, with row indices in Ai [72 ... 72]:
    row indices: 26

Column: 26, number of entries: 1, with row indices in Ai [73 ... 73]:
    row indices: 27

Column: 27, number of entries: 0, with row indices in Ai [74 ... 73]:
    row indices:

Column: 28, number of entries: 1, with row indices in Ai [74 ... 74]:
    row indices: 29

Column: 29, number of entries: 0, with row indices in Ai [75 ... 74]:
    row indices:

return value from camd_order: 0 (should be 0)

camd:  approximate minimum degree ordering, results:
    status: OK
    n, dimension of A:                                  30
    nz, number of nonzeros in A:                        75
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       150
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              1952
    # of memory compactions:                            1

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 219
    nonzeros in L (including diagonal):                 249
    # divide operations for LDL' or LU:                 219
    # multiply-subtract operations for LDL':            1131
    # multiply-subtract operations for LU:              2043
    max nz. in any column of L (incl. diagonal):        16

    chol flop count for real A, sqrt counted as 1 flop: 2511
    LDL' flop count for real A:                         2481
    LDL' flop count for complex A:                      11019
    LU flop count for real A (with no pivoting):        4305
    LU flop count for complex A (with no pivoting):     18315

Permutation vector:
  2  0 15  7 21 25  9 22  6 27 18  8 29 20  1  3  4  5 10 11 13 17 14 16 19 24 23 26 28 12

Inverse permutation vector:
  1 14  0 15 16 17  8  3 11  6 18 19 29 20 22  2 23 21 10 24 13  4  7 26 25  5 27  9 28 12

Execution of CAMD demo: OK
