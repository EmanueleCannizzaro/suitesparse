
===========================================================
title: [AG-Monien/se_G_03]
status 0
key [2440G3] nrow 32 ncol 32
mkind 1 skind 1 asize 92 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 32 ncol 32 nnz 46 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


CAMD demo:

camd version 2.3, Jun 20, 2012:  approximate minimum degree ordering:
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes


Input matrix:  32-by-32, with 46 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to CAMD, since CAMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since CAMD ignores them.

Column: 0, number of entries: 1, with row indices in Ai [0 ... 0]:
    row indices: 1

Column: 1, number of entries: 2, with row indices in Ai [1 ... 2]:
    row indices: 2 16

Column: 2, number of entries: 2, with row indices in Ai [3 ... 4]:
    row indices: 3 4

Column: 3, number of entries: 2, with row indices in Ai [5 ... 6]:
    row indices: 6 17

Column: 4, number of entries: 2, with row indices in Ai [7 ... 8]:
    row indices: 5 8

Column: 5, number of entries: 2, with row indices in Ai [9 ... 10]:
    row indices: 10 18

Column: 6, number of entries: 2, with row indices in Ai [11 ... 12]:
    row indices: 7 12

Column: 7, number of entries: 2, with row indices in Ai [13 ... 14]:
    row indices: 14 19

Column: 8, number of entries: 2, with row indices in Ai [15 ... 16]:
    row indices: 9 16

Column: 9, number of entries: 2, with row indices in Ai [17 ... 18]:
    row indices: 18 20

Column: 10, number of entries: 2, with row indices in Ai [19 ... 20]:
    row indices: 11 20

Column: 11, number of entries: 2, with row indices in Ai [21 ... 22]:
    row indices: 21 22

Column: 12, number of entries: 2, with row indices in Ai [23 ... 24]:
    row indices: 13 24

Column: 13, number of entries: 2, with row indices in Ai [25 ... 26]:
    row indices: 22 26

Column: 14, number of entries: 2, with row indices in Ai [27 ... 28]:
    row indices: 15 28

Column: 15, number of entries: 2, with row indices in Ai [29 ... 30]:
    row indices: 23 30

Column: 16, number of entries: 1, with row indices in Ai [31 ... 31]:
    row indices: 17

Column: 17, number of entries: 1, with row indices in Ai [32 ... 32]:
    row indices: 24

Column: 18, number of entries: 1, with row indices in Ai [33 ... 33]:
    row indices: 19

Column: 19, number of entries: 1, with row indices in Ai [34 ... 34]:
    row indices: 25

Column: 20, number of entries: 1, with row indices in Ai [35 ... 35]:
    row indices: 21

Column: 21, number of entries: 1, with row indices in Ai [36 ... 36]:
    row indices: 26

Column: 22, number of entries: 1, with row indices in Ai [37 ... 37]:
    row indices: 23

Column: 23, number of entries: 1, with row indices in Ai [38 ... 38]:
    row indices: 27

Column: 24, number of entries: 1, with row indices in Ai [39 ... 39]:
    row indices: 25

Column: 25, number of entries: 1, with row indices in Ai [40 ... 40]:
    row indices: 28

Column: 26, number of entries: 1, with row indices in Ai [41 ... 41]:
    row indices: 27

Column: 27, number of entries: 1, with row indices in Ai [42 ... 42]:
    row indices: 29

Column: 28, number of entries: 1, with row indices in Ai [43 ... 43]:
    row indices: 29

Column: 29, number of entries: 1, with row indices in Ai [44 ... 44]:
    row indices: 30

Column: 30, number of entries: 1, with row indices in Ai [45 ... 45]:
    row indices: 31

Column: 31, number of entries: 0, with row indices in Ai [46 ... 45]:
    row indices:

return value from camd_order: 0 (should be 0)

camd:  approximate minimum degree ordering, results:
    status: OK
    n, dimension of A:                                  32
    nz, number of nonzeros in A:                        46
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       92
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              1752
    # of memory compactions:                            0

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 106
    nonzeros in L (including diagonal):                 138
    # divide operations for LDL' or LU:                 106
    # multiply-subtract operations for LDL':            263
    # multiply-subtract operations for LU:              420
    max nz. in any column of L (incl. diagonal):        8

    chol flop count for real A, sqrt counted as 1 flop: 664
    LDL' flop count for real A:                         632
    LDL' flop count for complex A:                      3058
    LU flop count for real A (with no pivoting):        946
    LU flop count for complex A (with no pivoting):     4314

Permutation vector:
  0  1  2  6 24 17  3 10  5  9  8 19 21 22 13 31 30 15 28 14 27 29 23 26  4 11 12 16 18 20 25  7

Inverse permutation vector:
  0  1  2  6 24  8  3 31 10  9  7 25 26 14 19 17 27  5 28 11 29 12 13 22  4 30 23 20 18 21 16 15

Execution of CAMD demo: OK
