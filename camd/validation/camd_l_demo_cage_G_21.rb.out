
===========================================================
title: [AG-Monien/cage_G_21]
status 0
key [2436G21] nrow 58 ncol 58
mkind 1 skind 1 asize 174 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 58 ncol 58 nnz 87 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


CAMD demo:

camd version 2.3, Jun 20, 2012:  approximate minimum degree ordering:
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes


Input matrix:  58-by-58, with 87 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to CAMD, since CAMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since CAMD ignores them.

Column: 0, number of entries: 3, with row indices in Ai [0 ... 2]:
    row indices: 10 24 48

Column: 1, number of entries: 3, with row indices in Ai [3 ... 5]:
    row indices: 12 24 50

Column: 2, number of entries: 3, with row indices in Ai [6 ... 8]:
    row indices: 8 25 52

Column: 3, number of entries: 3, with row indices in Ai [9 ... 11]:
    row indices: 15 19 25

Column: 4, number of entries: 3, with row indices in Ai [12 ... 14]:
    row indices: 11 26 54

Column: 5, number of entries: 3, with row indices in Ai [15 ... 17]:
    row indices: 26 46 51

Column: 6, number of entries: 3, with row indices in Ai [18 ... 20]:
    row indices: 27 47 56

Column: 7, number of entries: 3, with row indices in Ai [21 ... 23]:
    row indices: 13 27 49

Column: 8, number of entries: 2, with row indices in Ai [24 ... 25]:
    row indices: 28 47

Column: 9, number of entries: 3, with row indices in Ai [26 ... 28]:
    row indices: 18 28 51

Column: 10, number of entries: 2, with row indices in Ai [29 ... 30]:
    row indices: 16 29

Column: 11, number of entries: 2, with row indices in Ai [31 ... 32]:
    row indices: 22 29

Column: 12, number of entries: 2, with row indices in Ai [33 ... 34]:
    row indices: 30 55

Column: 13, number of entries: 2, with row indices in Ai [35 ... 36]:
    row indices: 30 53

Column: 14, number of entries: 3, with row indices in Ai [37 ... 39]:
    row indices: 20 31 46

Column: 15, number of entries: 2, with row indices in Ai [40 ... 41]:
    row indices: 31 57

Column: 16, number of entries: 2, with row indices in Ai [42 ... 43]:
    row indices: 32 56

Column: 17, number of entries: 3, with row indices in Ai [44 ... 46]:
    row indices: 32 46 52

Column: 18, number of entries: 2, with row indices in Ai [47 ... 48]:
    row indices: 33 49

Column: 19, number of entries: 2, with row indices in Ai [49 ... 50]:
    row indices: 33 54

Column: 20, number of entries: 2, with row indices in Ai [51 ... 52]:
    row indices: 34 48

Column: 21, number of entries: 3, with row indices in Ai [53 ... 55]:
    row indices: 34 47 55

Column: 22, number of entries: 2, with row indices in Ai [56 ... 57]:
    row indices: 35 53

Column: 23, number of entries: 3, with row indices in Ai [58 ... 60]:
    row indices: 35 50 57

Column: 24, number of entries: 1, with row indices in Ai [61 ... 61]:
    row indices: 36

Column: 25, number of entries: 1, with row indices in Ai [62 ... 62]:
    row indices: 36

Column: 26, number of entries: 1, with row indices in Ai [63 ... 63]:
    row indices: 37

Column: 27, number of entries: 1, with row indices in Ai [64 ... 64]:
    row indices: 37

Column: 28, number of entries: 1, with row indices in Ai [65 ... 65]:
    row indices: 38

Column: 29, number of entries: 1, with row indices in Ai [66 ... 66]:
    row indices: 38

Column: 30, number of entries: 1, with row indices in Ai [67 ... 67]:
    row indices: 39

Column: 31, number of entries: 1, with row indices in Ai [68 ... 68]:
    row indices: 39

Column: 32, number of entries: 1, with row indices in Ai [69 ... 69]:
    row indices: 40

Column: 33, number of entries: 1, with row indices in Ai [70 ... 70]:
    row indices: 40

Column: 34, number of entries: 1, with row indices in Ai [71 ... 71]:
    row indices: 41

Column: 35, number of entries: 1, with row indices in Ai [72 ... 72]:
    row indices: 41

Column: 36, number of entries: 1, with row indices in Ai [73 ... 73]:
    row indices: 42

Column: 37, number of entries: 1, with row indices in Ai [74 ... 74]:
    row indices: 42

Column: 38, number of entries: 1, with row indices in Ai [75 ... 75]:
    row indices: 43

Column: 39, number of entries: 1, with row indices in Ai [76 ... 76]:
    row indices: 43

Column: 40, number of entries: 1, with row indices in Ai [77 ... 77]:
    row indices: 44

Column: 41, number of entries: 1, with row indices in Ai [78 ... 78]:
    row indices: 44

Column: 42, number of entries: 1, with row indices in Ai [79 ... 79]:
    row indices: 45

Column: 43, number of entries: 1, with row indices in Ai [80 ... 80]:
    row indices: 45

Column: 44, number of entries: 1, with row indices in Ai [81 ... 81]:
    row indices: 45

Column: 45, number of entries: 0, with row indices in Ai [82 ... 81]:
    row indices:

Column: 46, number of entries: 0, with row indices in Ai [82 ... 81]:
    row indices:

Column: 47, number of entries: 0, with row indices in Ai [82 ... 81]:
    row indices:

Column: 48, number of entries: 1, with row indices in Ai [82 ... 82]:
    row indices: 49

Column: 49, number of entries: 0, with row indices in Ai [83 ... 82]:
    row indices:

Column: 50, number of entries: 1, with row indices in Ai [83 ... 83]:
    row indices: 51

Column: 51, number of entries: 0, with row indices in Ai [84 ... 83]:
    row indices:

Column: 52, number of entries: 1, with row indices in Ai [84 ... 84]:
    row indices: 53

Column: 53, number of entries: 0, with row indices in Ai [85 ... 84]:
    row indices:

Column: 54, number of entries: 1, with row indices in Ai [85 ... 85]:
    row indices: 55

Column: 55, number of entries: 0, with row indices in Ai [86 ... 85]:
    row indices:

Column: 56, number of entries: 1, with row indices in Ai [86 ... 86]:
    row indices: 57

Column: 57, number of entries: 0, with row indices in Ai [87 ... 86]:
    row indices:

return value from camd_order: 0 (should be 0)

camd:  approximate minimum degree ordering, results:
    status: OK
    n, dimension of A:                                  58
    nz, number of nonzeros in A:                        87
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       174
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              6368
    # of memory compactions:                            1

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 317
    nonzeros in L (including diagonal):                 375
    # divide operations for LDL' or LU:                 317
    # multiply-subtract operations for LDL':            1401
    # multiply-subtract operations for LU:              2485
    max nz. in any column of L (incl. diagonal):        16

    chol flop count for real A, sqrt counted as 1 flop: 3177
    LDL' flop count for real A:                         3119
    LDL' flop count for complex A:                      14061
    LU flop count for real A (with no pivoting):        5287
    LU flop count for complex A (with no pivoting):     22733

Permutation vector:
 47 55 21 11  4 37 27 26  0 16 10 57 56  6 49 18 38 28  1 51 50  9 41 35 40 45 44 46 17 20 53 13 39 31 30 14  2 19  3 36 25 52  5  7 12  8 54 15 23 29 34 22 42 32 43 33 48 24

Inverse permutation vector:
  8 18 36 38  4 42 13 43 45 21 10  3 44 31 35 47  9 28 15 37 29  2 51 48 57 40  7  6 17 49 34 33 53 55 50 23 39  5 16 32 24 22 52 54 26 25 27  0 56 14 20 19 41 30 46  1 12 11

Execution of CAMD demo: OK
