
===========================================================
title: [AG-Monien/cage_G_32]
status 0
key [2436G32] nrow 26 ncol 26
mkind 1 skind 1 asize 104 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 26 ncol 26 nnz 52 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


AMD demo:

Approximate minimum degree ordering
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes

Input matrix:  26-by-26, with 52 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to AMD, since AMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since AMD ignores them.

Column: 0, number of entries: 4, with row indices in Ai [0 ... 3]:
    row indices: 1 2 3 4

Column: 1, number of entries: 3, with row indices in Ai [4 ... 6]:
    row indices: 5 6 7

Column: 2, number of entries: 3, with row indices in Ai [7 ... 9]:
    row indices: 8 9 10

Column: 3, number of entries: 3, with row indices in Ai [10 ... 12]:
    row indices: 11 12 13

Column: 4, number of entries: 3, with row indices in Ai [13 ... 15]:
    row indices: 14 15 16

Column: 5, number of entries: 3, with row indices in Ai [16 ... 18]:
    row indices: 17 18 19

Column: 6, number of entries: 3, with row indices in Ai [19 ... 21]:
    row indices: 20 21 22

Column: 7, number of entries: 3, with row indices in Ai [22 ... 24]:
    row indices: 23 24 25

Column: 8, number of entries: 3, with row indices in Ai [25 ... 27]:
    row indices: 17 20 23

Column: 9, number of entries: 3, with row indices in Ai [28 ... 30]:
    row indices: 18 21 24

Column: 10, number of entries: 3, with row indices in Ai [31 ... 33]:
    row indices: 19 22 25

Column: 11, number of entries: 3, with row indices in Ai [34 ... 36]:
    row indices: 17 21 25

Column: 12, number of entries: 3, with row indices in Ai [37 ... 39]:
    row indices: 18 22 23

Column: 13, number of entries: 3, with row indices in Ai [40 ... 42]:
    row indices: 19 20 24

Column: 14, number of entries: 3, with row indices in Ai [43 ... 45]:
    row indices: 17 22 24

Column: 15, number of entries: 3, with row indices in Ai [46 ... 48]:
    row indices: 18 20 25

Column: 16, number of entries: 3, with row indices in Ai [49 ... 51]:
    row indices: 19 21 23

Column: 17, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 18, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 19, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 20, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 21, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 22, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 23, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 24, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

Column: 25, number of entries: 0, with row indices in Ai [52 ... 51]:
    row indices:

return value from amd_order: 0 (should be 0)

Results:
    status: OK
    n, dimension of A:                                  26
    nz, number of nonzeros in A:                        52
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       104
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              1432
    # of memory compactions:                            0

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 130
    nonzeros in L (including diagonal):                 156
    # divide operations for LDL' or LU:                 130
    # multiply-subtract operations for LDL':            494
    # multiply-subtract operations for LU:              858
    max nz. in any column of L (incl. diagonal):        13

    chol flop count for real A, sqrt counted as 1 flop: 1144
    LDL' flop count for real A:                         1118
    LDL' flop count for complex A:                      5122
    LU flop count for real A (with no pivoting):        1846
    LU flop count for complex A (with no pivoting):     8034

Permutation vector:
  1  2  3  4 17 18 19 20 21 22 23 24 25  0  5  6  8  9 10 11 12 13 14 15 16  7

Inverse permutation vector:
 13  0  1  2  3 14 15 25 16 17 18 19 20 21 22 23 24  4  5  6  7  8  9 10 11 12

Execution of AMD demo: OK
