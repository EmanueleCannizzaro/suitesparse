
===========================================================
title: [AG-Monien/cage_G_37]
status 0
key [2436G37] nrow 62 ncol 62
mkind 1 skind 1 asize 372 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 62 ncol 62 nnz 186 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


AMD demo:

Approximate minimum degree ordering
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes

Input matrix:  62-by-62, with 186 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to AMD, since AMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since AMD ignores them.

Column: 0, number of entries: 6, with row indices in Ai [0 ... 5]:
    row indices: 1 2 3 4 5 6

Column: 1, number of entries: 5, with row indices in Ai [6 ... 10]:
    row indices: 7 8 9 10 11

Column: 2, number of entries: 5, with row indices in Ai [11 ... 15]:
    row indices: 12 13 14 15 16

Column: 3, number of entries: 5, with row indices in Ai [16 ... 20]:
    row indices: 17 18 19 20 21

Column: 4, number of entries: 5, with row indices in Ai [21 ... 25]:
    row indices: 22 23 24 25 26

Column: 5, number of entries: 5, with row indices in Ai [26 ... 30]:
    row indices: 27 28 29 30 31

Column: 6, number of entries: 5, with row indices in Ai [31 ... 35]:
    row indices: 32 33 34 35 36

Column: 7, number of entries: 5, with row indices in Ai [36 ... 40]:
    row indices: 37 38 39 40 41

Column: 8, number of entries: 5, with row indices in Ai [41 ... 45]:
    row indices: 42 43 44 45 46

Column: 9, number of entries: 5, with row indices in Ai [46 ... 50]:
    row indices: 47 48 49 50 51

Column: 10, number of entries: 5, with row indices in Ai [51 ... 55]:
    row indices: 52 53 54 55 56

Column: 11, number of entries: 5, with row indices in Ai [56 ... 60]:
    row indices: 57 58 59 60 61

Column: 12, number of entries: 5, with row indices in Ai [61 ... 65]:
    row indices: 37 42 47 52 57

Column: 13, number of entries: 5, with row indices in Ai [66 ... 70]:
    row indices: 38 43 48 53 58

Column: 14, number of entries: 5, with row indices in Ai [71 ... 75]:
    row indices: 39 44 49 54 59

Column: 15, number of entries: 5, with row indices in Ai [76 ... 80]:
    row indices: 40 45 50 55 60

Column: 16, number of entries: 5, with row indices in Ai [81 ... 85]:
    row indices: 41 46 51 56 61

Column: 17, number of entries: 5, with row indices in Ai [86 ... 90]:
    row indices: 37 43 49 55 61

Column: 18, number of entries: 5, with row indices in Ai [91 ... 95]:
    row indices: 38 44 50 56 57

Column: 19, number of entries: 5, with row indices in Ai [96 ... 100]:
    row indices: 39 45 51 52 58

Column: 20, number of entries: 5, with row indices in Ai [101 ... 105]:
    row indices: 40 46 47 53 59

Column: 21, number of entries: 5, with row indices in Ai [106 ... 110]:
    row indices: 41 42 48 54 60

Column: 22, number of entries: 5, with row indices in Ai [111 ... 115]:
    row indices: 37 44 51 53 60

Column: 23, number of entries: 5, with row indices in Ai [116 ... 120]:
    row indices: 38 45 47 54 61

Column: 24, number of entries: 5, with row indices in Ai [121 ... 125]:
    row indices: 39 46 48 55 57

Column: 25, number of entries: 5, with row indices in Ai [126 ... 130]:
    row indices: 40 42 49 56 58

Column: 26, number of entries: 5, with row indices in Ai [131 ... 135]:
    row indices: 41 43 50 52 59

Column: 27, number of entries: 5, with row indices in Ai [136 ... 140]:
    row indices: 37 45 48 56 59

Column: 28, number of entries: 5, with row indices in Ai [141 ... 145]:
    row indices: 38 46 49 52 60

Column: 29, number of entries: 5, with row indices in Ai [146 ... 150]:
    row indices: 39 42 50 53 61

Column: 30, number of entries: 5, with row indices in Ai [151 ... 155]:
    row indices: 40 43 51 54 57

Column: 31, number of entries: 5, with row indices in Ai [156 ... 160]:
    row indices: 41 44 47 55 58

Column: 32, number of entries: 5, with row indices in Ai [161 ... 165]:
    row indices: 37 46 50 54 58

Column: 33, number of entries: 5, with row indices in Ai [166 ... 170]:
    row indices: 38 42 51 55 59

Column: 34, number of entries: 5, with row indices in Ai [171 ... 175]:
    row indices: 39 43 47 56 60

Column: 35, number of entries: 5, with row indices in Ai [176 ... 180]:
    row indices: 40 44 48 52 61

Column: 36, number of entries: 5, with row indices in Ai [181 ... 185]:
    row indices: 41 45 49 53 57

Column: 37, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 38, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 39, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 40, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 41, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 42, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 43, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 44, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 45, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 46, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 47, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 48, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 49, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 50, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 51, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 52, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 53, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 54, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 55, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 56, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 57, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 58, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 59, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 60, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

Column: 61, number of entries: 0, with row indices in Ai [186 ... 185]:
    row indices:

return value from amd_order: 0 (should be 0)

Results:
    status: OK
    n, dimension of A:                                  62
    nz, number of nonzeros in A:                        186
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       372
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              4016
    # of memory compactions:                            0

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 651
    nonzeros in L (including diagonal):                 713
    # divide operations for LDL' or LU:                 651
    # multiply-subtract operations for LDL':            5611
    # multiply-subtract operations for LU:              10571
    max nz. in any column of L (incl. diagonal):        31

    chol flop count for real A, sqrt counted as 1 flop: 11935
    LDL' flop count for real A:                         11873
    LDL' flop count for complex A:                      50747
    LU flop count for real A (with no pivoting):        21793
    LU flop count for complex A (with no pivoting):     90427

Permutation vector:
  1  2  3  4  5  6 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  0  7  8  9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 11

Inverse permutation vector:
 31  0  1  2  3  4  5 32 33 34 35 61 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30

Execution of AMD demo: OK
