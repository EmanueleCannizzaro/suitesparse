
===========================================================
title: [AG-Monien/cage_G_12]
status 0
key [2436G12] nrow 58 ncol 58
mkind 1 skind 1 asize 174 znz 0
mtype from file:               [psa]
(A) RBok status 0 0 0
(Z) RBok status 0 0 0
mtype from examining matrix:   [psa]
mtype after reading from file: [psa]
raw nrow 58 ncol 58 nnz 87 nelnz 0 xsize 0
mtype from raw read from file: [pua]
(P) RBok status 0 0 0
mtype of pattern:              [psa]
mtype of tril(A):              [pua]
(L) RBok status 0 0 0


AMD demo:

Approximate minimum degree ordering
    dense row parameter: 10
    (rows with more than max (10 * sqrt (n), 16) entries are
    considered "dense", and placed last in output permutation)
    aggressive absorption:  yes

Input matrix:  58-by-58, with 87 entries.
   Note that for a symmetric matrix such as this one, only the
   strictly lower or upper triangular parts would need to be
   passed to AMD, since AMD computes the ordering of A+A'.  The
   diagonal entries are also not needed, since AMD ignores them.

Column: 0, number of entries: 3, with row indices in Ai [0 ... 2]:
    row indices: 1 2 3

Column: 1, number of entries: 2, with row indices in Ai [3 ... 4]:
    row indices: 5 9

Column: 2, number of entries: 2, with row indices in Ai [5 ... 6]:
    row indices: 6 8

Column: 3, number of entries: 2, with row indices in Ai [7 ... 8]:
    row indices: 4 7

Column: 4, number of entries: 2, with row indices in Ai [9 ... 10]:
    row indices: 11 19

Column: 5, number of entries: 2, with row indices in Ai [11 ... 12]:
    row indices: 12 20

Column: 6, number of entries: 2, with row indices in Ai [13 ... 14]:
    row indices: 13 14

Column: 7, number of entries: 2, with row indices in Ai [15 ... 16]:
    row indices: 10 18

Column: 8, number of entries: 2, with row indices in Ai [17 ... 18]:
    row indices: 15 21

Column: 9, number of entries: 2, with row indices in Ai [19 ... 20]:
    row indices: 16 17

Column: 10, number of entries: 2, with row indices in Ai [21 ... 22]:
    row indices: 33 36

Column: 11, number of entries: 2, with row indices in Ai [23 ... 24]:
    row indices: 34 42

Column: 12, number of entries: 2, with row indices in Ai [25 ... 26]:
    row indices: 30 35

Column: 13, number of entries: 2, with row indices in Ai [27 ... 28]:
    row indices: 31 41

Column: 14, number of entries: 2, with row indices in Ai [29 ... 30]:
    row indices: 23 25

Column: 15, number of entries: 2, with row indices in Ai [31 ... 32]:
    row indices: 24 45

Column: 16, number of entries: 2, with row indices in Ai [33 ... 34]:
    row indices: 28 43

Column: 17, number of entries: 2, with row indices in Ai [35 ... 36]:
    row indices: 29 44

Column: 18, number of entries: 2, with row indices in Ai [37 ... 38]:
    row indices: 26 38

Column: 19, number of entries: 2, with row indices in Ai [39 ... 40]:
    row indices: 27 37

Column: 20, number of entries: 2, with row indices in Ai [41 ... 42]:
    row indices: 32 40

Column: 21, number of entries: 2, with row indices in Ai [43 ... 44]:
    row indices: 22 39

Column: 22, number of entries: 2, with row indices in Ai [45 ... 46]:
    row indices: 29 33

Column: 23, number of entries: 2, with row indices in Ai [47 ... 48]:
    row indices: 28 34

Column: 24, number of entries: 2, with row indices in Ai [49 ... 50]:
    row indices: 26 35

Column: 25, number of entries: 2, with row indices in Ai [51 ... 52]:
    row indices: 30 36

Column: 26, number of entries: 1, with row indices in Ai [53 ... 53]:
    row indices: 28

Column: 27, number of entries: 2, with row indices in Ai [54 ... 55]:
    row indices: 29 31

Column: 28, number of entries: 0, with row indices in Ai [56 ... 55]:
    row indices:

Column: 29, number of entries: 0, with row indices in Ai [56 ... 55]:
    row indices:

Column: 30, number of entries: 1, with row indices in Ai [56 ... 56]:
    row indices: 37

Column: 31, number of entries: 1, with row indices in Ai [57 ... 57]:
    row indices: 40

Column: 32, number of entries: 2, with row indices in Ai [58 ... 59]:
    row indices: 38 39

Column: 33, number of entries: 1, with row indices in Ai [60 ... 60]:
    row indices: 52

Column: 34, number of entries: 1, with row indices in Ai [61 ... 61]:
    row indices: 53

Column: 35, number of entries: 1, with row indices in Ai [62 ... 62]:
    row indices: 46

Column: 36, number of entries: 1, with row indices in Ai [63 ... 63]:
    row indices: 55

Column: 37, number of entries: 1, with row indices in Ai [64 ... 64]:
    row indices: 48

Column: 38, number of entries: 1, with row indices in Ai [65 ... 65]:
    row indices: 49

Column: 39, number of entries: 1, with row indices in Ai [66 ... 66]:
    row indices: 51

Column: 40, number of entries: 1, with row indices in Ai [67 ... 67]:
    row indices: 47

Column: 41, number of entries: 2, with row indices in Ai [68 ... 69]:
    row indices: 46 54

Column: 42, number of entries: 2, with row indices in Ai [70 ... 71]:
    row indices: 46 56

Column: 43, number of entries: 2, with row indices in Ai [72 ... 73]:
    row indices: 48 51

Column: 44, number of entries: 2, with row indices in Ai [74 ... 75]:
    row indices: 49 50

Column: 45, number of entries: 2, with row indices in Ai [76 ... 77]:
    row indices: 47 50

Column: 46, number of entries: 0, with row indices in Ai [78 ... 77]:
    row indices:

Column: 47, number of entries: 1, with row indices in Ai [78 ... 78]:
    row indices: 53

Column: 48, number of entries: 1, with row indices in Ai [79 ... 79]:
    row indices: 57

Column: 49, number of entries: 1, with row indices in Ai [80 ... 80]:
    row indices: 54

Column: 50, number of entries: 1, with row indices in Ai [81 ... 81]:
    row indices: 55

Column: 51, number of entries: 1, with row indices in Ai [82 ... 82]:
    row indices: 56

Column: 52, number of entries: 2, with row indices in Ai [83 ... 84]:
    row indices: 53 57

Column: 53, number of entries: 0, with row indices in Ai [85 ... 84]:
    row indices:

Column: 54, number of entries: 1, with row indices in Ai [85 ... 85]:
    row indices: 57

Column: 55, number of entries: 1, with row indices in Ai [86 ... 86]:
    row indices: 56

Column: 56, number of entries: 0, with row indices in Ai [87 ... 86]:
    row indices:

Column: 57, number of entries: 0, with row indices in Ai [87 ... 86]:
    row indices:

return value from amd_order: 0 (should be 0)

Results:
    status: OK
    n, dimension of A:                                  58
    nz, number of nonzeros in A:                        87
    symmetry of A:                                      0.0000
    number of nonzeros on diagonal:                     0
    nonzeros in pattern of A+A' (excl. diagonal):       174
    # dense rows/columns of A+A':                       0
    memory used, in bytes:                              5840
    # of memory compactions:                            1

    The following approximate statistics are for a subsequent
    factorization of A(P,P) + A(P,P)'.  They are slight upper
    bounds if there are no dense rows/columns in A+A', and become
    looser if dense rows/columns exist.

    nonzeros in L (excluding diagonal):                 321
    nonzeros in L (including diagonal):                 379
    # divide operations for LDL' or LU:                 321
    # multiply-subtract operations for LDL':            1447
    # multiply-subtract operations for LU:              2573
    max nz. in any column of L (incl. diagonal):        17

    chol flop count for real A, sqrt counted as 1 flop: 3273
    LDL' flop count for real A:                         3215
    LDL' flop count for complex A:                      14465
    LU flop count for real A (with no pivoting):        5467
    LU flop count for complex A (with no pivoting):     23473

Permutation vector:
 37 29 27 19 12  5 40  8 39 32 21 20 18  3  0  7 24  9 28 43 16 26 49 50 45 44 33 57 11 53 34 52 56 14 36 25 13 46 41  6 42  1  2  4 10 15 17 23 30 31 35 38 47 48 51 54 55 22

Inverse permutation vector:
 14 41 42 13 43  5 39 15  7 17 44 28  4 36 33 45 20 46 12  3 11 10 57 47 16 35 21  2 18  1 48 49  9 26 30 50 34  0 51  8  6 38 40 19 25 24 37 52 53 22 23 54 31 29 55 56 32 27

Execution of AMD demo: OK
